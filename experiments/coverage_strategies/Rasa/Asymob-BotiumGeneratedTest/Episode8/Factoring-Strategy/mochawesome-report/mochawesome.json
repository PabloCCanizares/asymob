{
  "stats": {
    "suites": 1,
    "tests": 335,
    "passes": 335,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-18T12:21:03.388Z",
    "end": "2023-11-18T12:23:27.659Z",
    "duration": 144271,
    "testsRegistered": 335,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5b2e01a1-d05e-4a4b-9126-ed94437b7a1e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
          "title": "Botium Test-Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Botium Test-Suite\"",
              "fullTitle": "Botium Test-Suite \"before all\" hook in \"Botium Test-Suite\"",
              "timedOut": false,
              "duration": 23,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.Build()\n  .then((container) => {\n    suite.container = container\n    done()\n  })\n  .catch(done)",
              "err": {},
              "uuid": "620068fa-f4f4-4e44-8aa9-c9940d7cd6d9",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Botium Test-Suite\"",
              "fullTitle": "Botium Test-Suite \"before each\" hook in \"Botium Test-Suite\"",
              "timedOut": false,
              "duration": 5,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "suite.container ? suite.container.Start().then(() => done()).catch(done) : done()",
              "err": {},
              "uuid": "2cd374c2-3139-4631-95b3-dc6c9815af8b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Botium Test-Suite\"",
              "fullTitle": "Botium Test-Suite \"after all\" hook in \"Botium Test-Suite\"",
              "timedOut": false,
              "duration": 6,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "suite.container ? suite.container.Clean().then(() => done()).catch(done) : done()",
              "err": {},
              "uuid": "5868ee7d-f28b-4b21-92d3-c3588ac1adcf",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Botium Test-Suite\"",
              "fullTitle": "Botium Test-Suite \"after each\" hook in \"Botium Test-Suite\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "suite.container ? suite.container.Stop().then(() => done()).catch(done) : done()",
              "err": {},
              "uuid": "ead2fb3b-5334-42e5-9ef1-d2a0eee8270b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L01",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L01",
              "timedOut": false,
              "duration": 393,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "7bc0484a-2cc7-4179-a1c0-35940b3c3978",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L02",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L02",
              "timedOut": false,
              "duration": 376,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hey\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "6a625ede-2277-40b6-8772-64b091ea2b2d",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L03",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L03",
              "timedOut": false,
              "duration": 384,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi bot\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "6387dd87-8465-4406-9048-f24f4f20ed0e",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L04",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L04",
              "timedOut": false,
              "duration": 383,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hey bot\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "8d117c35-4f23-47ac-be67-d5b3b07ac402",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L05",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L05",
              "timedOut": false,
              "duration": 383,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: good morning\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "96153637-4809-48f2-8d96-67a7ad43c8c5",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L06",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L06",
              "timedOut": false,
              "duration": 370,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi folks\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "8da9d5fd-ef68-4750-91d2-f99667be4399",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L07",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L07",
              "timedOut": false,
              "duration": 377,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi Mister\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "cb131604-619c-46b1-9d98-58902b4d03a4",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L08",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L08",
              "timedOut": false,
              "duration": 380,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi pal!\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "1e86d258-4b45-4e4e-b6f5-803734cbacd1",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L09",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L09",
              "timedOut": false,
              "duration": 380,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi there\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "25fc6225-4a8d-4abe-936a-477f7fc239f6",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L10",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L10",
              "timedOut": false,
              "duration": 388,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: greetings\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "d560eaa9-b0b7-4c98-9b04-a16f4ffc0e61",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L11",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L11",
              "timedOut": false,
              "duration": 373,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello everybody\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "6dc319c2-9561-4216-be16-d900eb634621",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L12",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L12",
              "timedOut": false,
              "duration": 368,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello is anybody there\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "85d207af-a6e0-4f35-9374-450248e63e33",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L13",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L13",
              "timedOut": false,
              "duration": 380,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello robot\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "8b7107da-071a-4545-b168-2b85c44f630e",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L14",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case0/GREET_USER-L14",
              "timedOut": false,
              "duration": 369,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "fd899980-6067-460d-8a9d-cce78e00b838",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L01",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L01",
              "timedOut": false,
              "duration": 370,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Hammonton\\n#bot: Here is a hospital near you:\\n  BUTTON(Ancora Psych Hosp | /inform{\\\"facility_id\\\":\\\"314005\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "5f5807b2-563f-47e7-a932-5b02d90e7261",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L02",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L02",
              "timedOut": false,
              "duration": 368,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hey\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: What is your current city?\\n#me: Hammonton\\n#bot: Here is a hospital near you:\\n  BUTTON(Ancora Psych Hosp | /inform{\\\"facility_id\\\":\\\"314005\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "443330ca-a926-457b-88db-654554c0dafa",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L03",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L03",
              "timedOut": false,
              "duration": 375,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi bot\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: What is your current city?\\n#me: Hammonton\\n#bot: Here is a hospital near you:\\n  BUTTON(Ancora Psych Hosp | /inform{\\\"facility_id\\\":\\\"314005\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "3eb04b9d-69a3-4874-9f87-f5fb2f1e4b08",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L04",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L04",
              "timedOut": false,
              "duration": 368,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hey bot\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Hammonton\\n#bot: Here is a hospital near you:\\n  BUTTON(Ancora Psych Hosp | /inform{\\\"facility_id\\\":\\\"314005\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "6dfeaa1f-2330-4457-9d24-241923297035",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L05",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L05",
              "timedOut": false,
              "duration": 379,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: good morning\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: What is your current city?\\n#me: Hammonton\\n#bot: Here is a hospital near you:\\n  BUTTON(Ancora Psych Hosp | /inform{\\\"facility_id\\\":\\\"314005\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "fae2712b-4c7d-42b3-afe7-4fc4e90f77d6",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L06",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L06",
              "timedOut": false,
              "duration": 376,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi folks\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Hammonton\\n#bot: Here is a hospital near you:\\n  BUTTON(Ancora Psych Hosp | /inform{\\\"facility_id\\\":\\\"314005\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "677b9ef9-31d1-4a38-9054-f2a198aa1b84",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L07",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L07",
              "timedOut": false,
              "duration": 374,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi Mister\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name or zip code.\\n#me: Hammonton\\n#bot: Here is a hospital near you:\\n  BUTTON(Ancora Psych Hosp | /inform{\\\"facility_id\\\":\\\"314005\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "623c7bad-f7a0-49bb-85a3-e055313784a1",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L08",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L08",
              "timedOut": false,
              "duration": 379,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi pal!\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Hammonton\\n#bot: Here is a hospital near you:\\n  BUTTON(Ancora Psych Hosp | /inform{\\\"facility_id\\\":\\\"314005\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "879a9ce7-40a8-479d-97c6-6910b9cc4cdc",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L09",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L09",
              "timedOut": false,
              "duration": 385,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi there\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Hammonton\\n#bot: Here is a hospital near you:\\n  BUTTON(Ancora Psych Hosp | /inform{\\\"facility_id\\\":\\\"314005\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "ac1c633c-7cd7-4e26-98b7-171e15426856",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L10",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L10",
              "timedOut": false,
              "duration": 372,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: greetings\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Hammonton\\n#bot: Here is a hospital near you:\\n  BUTTON(Ancora Psych Hosp | /inform{\\\"facility_id\\\":\\\"314005\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "27d2d43e-3b00-4bce-9ee7-b5d98006eaf4",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L11",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L11",
              "timedOut": false,
              "duration": 381,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello everybody\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: What is your current city?\\n#me: Hammonton\\n#bot: Here is a hospital near you:\\n  BUTTON(Ancora Psych Hosp | /inform{\\\"facility_id\\\":\\\"314005\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "99874046-f230-41cd-95bc-64bf571a4092",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L12",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L12",
              "timedOut": false,
              "duration": 366,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello is anybody there\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name or zip code.\\n#me: Hammonton\\n#bot: Here is a hospital near you:\\n  BUTTON(Ancora Psych Hosp | /inform{\\\"facility_id\\\":\\\"314005\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "5f07b1d5-5702-413c-beea-7727e4914bee",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L13",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L13",
              "timedOut": false,
              "duration": 381,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello robot\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name or zip code.\\n#me: Hammonton\\n#bot: Here is a hospital near you:\\n  BUTTON(Ancora Psych Hosp | /inform{\\\"facility_id\\\":\\\"314005\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "6a03bcf3-d455-49fd-a9de-c3df9b7340a2",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L14",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case1/GREET_USER-L14",
              "timedOut": false,
              "duration": 372,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name or zip code.\\n#me: Hammonton\\n#bot: Here is a hospital near you:\\n  BUTTON(Ancora Psych Hosp | /inform{\\\"facility_id\\\":\\\"314005\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "ea476972-e053-4aac-9f33-3b4c311a4677",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L01",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L01",
              "timedOut": false,
              "duration": 378,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: What is your current city?\\n#me: Broussard\\n#bot: Here is a hospital near you:\\n  BUTTON(Oceans Hospital Of Broussard | /inform{\\\"facility_id\\\":\\\"194073\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "824accae-9874-4ac5-be85-9058d0f7abd4",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L02",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L02",
              "timedOut": false,
              "duration": 374,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hey\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Broussard\\n#bot: Here is a hospital near you:\\n  BUTTON(Oceans Hospital Of Broussard | /inform{\\\"facility_id\\\":\\\"194073\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "ee823c8e-18e2-4a58-8ed8-d6de1ffe5a80",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L03",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L03",
              "timedOut": false,
              "duration": 373,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi bot\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Broussard\\n#bot: Here is a hospital near you:\\n  BUTTON(Oceans Hospital Of Broussard | /inform{\\\"facility_id\\\":\\\"194073\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "ee38f214-13c4-48d7-95bd-31d63fa60e57",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L04",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L04",
              "timedOut": false,
              "duration": 372,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hey bot\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name or zip code.\\n#me: Broussard\\n#bot: Here is a hospital near you:\\n  BUTTON(Oceans Hospital Of Broussard | /inform{\\\"facility_id\\\":\\\"194073\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "972cbe9f-10ba-4d6a-92db-35b8f75c2afb",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L05",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L05",
              "timedOut": false,
              "duration": 372,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: good morning\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Broussard\\n#bot: Here is a hospital near you:\\n  BUTTON(Oceans Hospital Of Broussard | /inform{\\\"facility_id\\\":\\\"194073\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "51f911f3-363e-449b-a550-111ea4e0294f",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L06",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L06",
              "timedOut": false,
              "duration": 384,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi folks\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name or zip code.\\n#me: Broussard\\n#bot: Here is a hospital near you:\\n  BUTTON(Oceans Hospital Of Broussard | /inform{\\\"facility_id\\\":\\\"194073\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "1a9ac646-3b29-444b-9049-b64edad6247f",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L07",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L07",
              "timedOut": false,
              "duration": 366,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi Mister\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Broussard\\n#bot: Here is a hospital near you:\\n  BUTTON(Oceans Hospital Of Broussard | /inform{\\\"facility_id\\\":\\\"194073\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "2baa5108-0c54-485c-b883-0f7d4e640cc6",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L08",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L08",
              "timedOut": false,
              "duration": 361,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi pal!\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Broussard\\n#bot: Here is a hospital near you:\\n  BUTTON(Oceans Hospital Of Broussard | /inform{\\\"facility_id\\\":\\\"194073\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "695088a6-b0b6-4695-b1d8-9c1490d3d642",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L09",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L09",
              "timedOut": false,
              "duration": 356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi there\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Broussard\\n#bot: Here is a hospital near you:\\n  BUTTON(Oceans Hospital Of Broussard | /inform{\\\"facility_id\\\":\\\"194073\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "ba13b841-2c26-4745-969d-72b36f122d34",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L10",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L10",
              "timedOut": false,
              "duration": 366,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: greetings\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name or zip code.\\n#me: Broussard\\n#bot: Here is a hospital near you:\\n  BUTTON(Oceans Hospital Of Broussard | /inform{\\\"facility_id\\\":\\\"194073\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "4799438d-88c8-4025-9731-3e834108f469",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L11",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L11",
              "timedOut": false,
              "duration": 363,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello everybody\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Broussard\\n#bot: Here is a hospital near you:\\n  BUTTON(Oceans Hospital Of Broussard | /inform{\\\"facility_id\\\":\\\"194073\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "376efe02-4c0d-4736-9dab-94d704fc5f2b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L12",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L12",
              "timedOut": false,
              "duration": 362,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello is anybody there\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Broussard\\n#bot: Here is a hospital near you:\\n  BUTTON(Oceans Hospital Of Broussard | /inform{\\\"facility_id\\\":\\\"194073\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "012d5c93-5240-4d9d-837c-0822d6d1c58d",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L13",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L13",
              "timedOut": false,
              "duration": 368,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello robot\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name or zip code.\\n#me: Broussard\\n#bot: Here is a hospital near you:\\n  BUTTON(Oceans Hospital Of Broussard | /inform{\\\"facility_id\\\":\\\"194073\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "8569bbf6-c82d-4c68-b922-fe2750628bf0",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L14",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case2/GREET_USER-L14",
              "timedOut": false,
              "duration": 363,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: What is your current city?\\n#me: Broussard\\n#bot: Here is a hospital near you:\\n  BUTTON(Oceans Hospital Of Broussard | /inform{\\\"facility_id\\\":\\\"194073\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "eccdf152-baee-4006-a7da-067989c57b98",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L01",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L01",
              "timedOut": false,
              "duration": 369,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: What is your current city?\\n#me: Magee\\n#bot: Here is a hospital near you:\\n  BUTTON(Magee General Hospital | /inform{\\\"facility_id\\\":\\\"250124\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "231341bd-e46f-45f8-9929-3b25d5671d63",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L02",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L02",
              "timedOut": false,
              "duration": 375,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hey\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Magee\\n#bot: Here is a hospital near you:\\n  BUTTON(Magee General Hospital | /inform{\\\"facility_id\\\":\\\"250124\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "67570c80-d816-4562-bb97-0afaebc166c9",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L03",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L03",
              "timedOut": false,
              "duration": 374,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi bot\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Magee\\n#bot: Here is a hospital near you:\\n  BUTTON(Magee General Hospital | /inform{\\\"facility_id\\\":\\\"250124\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "391d18d5-4c6b-4367-9209-5d846403b5ee",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L04",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L04",
              "timedOut": false,
              "duration": 358,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hey bot\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Magee\\n#bot: Here is a hospital near you:\\n  BUTTON(Magee General Hospital | /inform{\\\"facility_id\\\":\\\"250124\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "d5779610-487f-4107-8f55-f9ba20b50de2",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L05",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L05",
              "timedOut": false,
              "duration": 363,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: good morning\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: What is your current city?\\n#me: Magee\\n#bot: Here is a hospital near you:\\n  BUTTON(Magee General Hospital | /inform{\\\"facility_id\\\":\\\"250124\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "652bbe2f-ec02-4894-b08d-a0223cfa0f7c",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L06",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L06",
              "timedOut": false,
              "duration": 366,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi folks\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Magee\\n#bot: Here is a hospital near you:\\n  BUTTON(Magee General Hospital | /inform{\\\"facility_id\\\":\\\"250124\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b4470b63-9353-4959-9b13-0d4297370123",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L07",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L07",
              "timedOut": false,
              "duration": 366,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi Mister\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: What is your current city?\\n#me: Magee\\n#bot: Here is a hospital near you:\\n  BUTTON(Magee General Hospital | /inform{\\\"facility_id\\\":\\\"250124\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "800baa3f-83c9-4833-93db-ffa21ef550eb",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L08",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L08",
              "timedOut": false,
              "duration": 363,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi pal!\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Magee\\n#bot: Here is a hospital near you:\\n  BUTTON(Magee General Hospital | /inform{\\\"facility_id\\\":\\\"250124\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "4329cbbe-6d47-420b-9ef2-230459fdc4c5",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L09",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L09",
              "timedOut": false,
              "duration": 379,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi there\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name or zip code.\\n#me: Magee\\n#bot: Here is a hospital near you:\\n  BUTTON(Magee General Hospital | /inform{\\\"facility_id\\\":\\\"250124\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "ad84f40e-59d1-4a89-a9f9-71b4b4588a88",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L10",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L10",
              "timedOut": false,
              "duration": 370,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: greetings\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: What is your current city?\\n#me: Magee\\n#bot: Here is a hospital near you:\\n  BUTTON(Magee General Hospital | /inform{\\\"facility_id\\\":\\\"250124\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "23821f94-e67d-4d9e-869b-e6b7c4da8466",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L11",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L11",
              "timedOut": false,
              "duration": 375,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello everybody\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name or zip code.\\n#me: Magee\\n#bot: Here is a hospital near you:\\n  BUTTON(Magee General Hospital | /inform{\\\"facility_id\\\":\\\"250124\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "5a87a8b9-fcfb-4f31-8ec8-abb94a81d592",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L12",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L12",
              "timedOut": false,
              "duration": 371,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello is anybody there\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: What is your current city?\\n#me: Magee\\n#bot: Here is a hospital near you:\\n  BUTTON(Magee General Hospital | /inform{\\\"facility_id\\\":\\\"250124\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "bc43a068-cb53-4eda-b19d-45567a59ab8c",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L13",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L13",
              "timedOut": false,
              "duration": 365,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello robot\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: What is your current city?\\n#me: Magee\\n#bot: Here is a hospital near you:\\n  BUTTON(Magee General Hospital | /inform{\\\"facility_id\\\":\\\"250124\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "61aa76c8-6c0b-4fae-876d-e6d57a953d7e",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L14",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case5/GREET_USER-L14",
              "timedOut": false,
              "duration": 364,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Magee\\n#bot: Here is a hospital near you:\\n  BUTTON(Magee General Hospital | /inform{\\\"facility_id\\\":\\\"250124\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "4e5cfcdf-a725-4a0c-bfb2-3508bccc4d32",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L01",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L01",
              "timedOut": false,
              "duration": 369,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Houston\\n#bot: Here are 3 hospitals near you:\\n  BUTTON(Cypress Creek Hospital | /inform{\\\"facility_id\\\":\\\"454108\\\"})\\n  BUTTON(Sun Behavioral Houston | /inform{\\\"facility_id\\\":\\\"454139\\\"})\\n  BUTTON(Us Pain & Spine Hospital | /inform{\\\"facility_id\\\":\\\"450797\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "9368bc99-a94f-4bcf-9cbd-4b23817ea664",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L02",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L02",
              "timedOut": false,
              "duration": 376,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hey\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name or zip code.\\n#me: Houston\\n#bot: Here are 3 hospitals near you:\\n  BUTTON(Cypress Creek Hospital | /inform{\\\"facility_id\\\":\\\"454108\\\"})\\n  BUTTON(Sun Behavioral Houston | /inform{\\\"facility_id\\\":\\\"454139\\\"})\\n  BUTTON(Us Pain & Spine Hospital | /inform{\\\"facility_id\\\":\\\"450797\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "2a900c7f-e164-4b01-b6ef-fa49c75a0556",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L03",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L03",
              "timedOut": false,
              "duration": 366,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi bot\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Houston\\n#bot: Here are 3 hospitals near you:\\n  BUTTON(Cypress Creek Hospital | /inform{\\\"facility_id\\\":\\\"454108\\\"})\\n  BUTTON(Sun Behavioral Houston | /inform{\\\"facility_id\\\":\\\"454139\\\"})\\n  BUTTON(Us Pain & Spine Hospital | /inform{\\\"facility_id\\\":\\\"450797\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "ace7cca9-8fa9-47ac-bd43-23ddc110c6d2",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L04",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L04",
              "timedOut": false,
              "duration": 364,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hey bot\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Houston\\n#bot: Here are 3 hospitals near you:\\n  BUTTON(Cypress Creek Hospital | /inform{\\\"facility_id\\\":\\\"454108\\\"})\\n  BUTTON(Sun Behavioral Houston | /inform{\\\"facility_id\\\":\\\"454139\\\"})\\n  BUTTON(Us Pain & Spine Hospital | /inform{\\\"facility_id\\\":\\\"450797\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "6a649bee-07ff-48ab-9c1b-8ba3bfbe78ea",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L05",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L05",
              "timedOut": false,
              "duration": 371,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: good morning\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Houston\\n#bot: Here are 3 hospitals near you:\\n  BUTTON(Cypress Creek Hospital | /inform{\\\"facility_id\\\":\\\"454108\\\"})\\n  BUTTON(Sun Behavioral Houston | /inform{\\\"facility_id\\\":\\\"454139\\\"})\\n  BUTTON(Us Pain & Spine Hospital | /inform{\\\"facility_id\\\":\\\"450797\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "e6a9c55f-a092-4594-b4f2-ae78e9f66c2d",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L06",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L06",
              "timedOut": false,
              "duration": 366,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi folks\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Houston\\n#bot: Here are 3 hospitals near you:\\n  BUTTON(Cypress Creek Hospital | /inform{\\\"facility_id\\\":\\\"454108\\\"})\\n  BUTTON(Sun Behavioral Houston | /inform{\\\"facility_id\\\":\\\"454139\\\"})\\n  BUTTON(Us Pain & Spine Hospital | /inform{\\\"facility_id\\\":\\\"450797\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "6850fa8e-3a92-4307-b378-7efe3834fd39",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L07",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L07",
              "timedOut": false,
              "duration": 367,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi Mister\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Houston\\n#bot: Here are 3 hospitals near you:\\n  BUTTON(Cypress Creek Hospital | /inform{\\\"facility_id\\\":\\\"454108\\\"})\\n  BUTTON(Sun Behavioral Houston | /inform{\\\"facility_id\\\":\\\"454139\\\"})\\n  BUTTON(Us Pain & Spine Hospital | /inform{\\\"facility_id\\\":\\\"450797\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b1aed7ea-f979-4ac4-a86d-3c23ea7a4131",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L08",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L08",
              "timedOut": false,
              "duration": 375,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi pal!\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Houston\\n#bot: Here are 3 hospitals near you:\\n  BUTTON(Cypress Creek Hospital | /inform{\\\"facility_id\\\":\\\"454108\\\"})\\n  BUTTON(Sun Behavioral Houston | /inform{\\\"facility_id\\\":\\\"454139\\\"})\\n  BUTTON(Us Pain & Spine Hospital | /inform{\\\"facility_id\\\":\\\"450797\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b32af954-bc47-4048-ad31-d667d843a61b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L09",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L09",
              "timedOut": false,
              "duration": 595,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi there\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Houston\\n#bot: Here are 3 hospitals near you:\\n  BUTTON(Cypress Creek Hospital | /inform{\\\"facility_id\\\":\\\"454108\\\"})\\n  BUTTON(Sun Behavioral Houston | /inform{\\\"facility_id\\\":\\\"454139\\\"})\\n  BUTTON(Us Pain & Spine Hospital | /inform{\\\"facility_id\\\":\\\"450797\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "333eda0b-7448-4a42-aa3d-8a3438b8da7b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L10",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L10",
              "timedOut": false,
              "duration": 386,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: greetings\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Houston\\n#bot: Here are 3 hospitals near you:\\n  BUTTON(Cypress Creek Hospital | /inform{\\\"facility_id\\\":\\\"454108\\\"})\\n  BUTTON(Sun Behavioral Houston | /inform{\\\"facility_id\\\":\\\"454139\\\"})\\n  BUTTON(Us Pain & Spine Hospital | /inform{\\\"facility_id\\\":\\\"450797\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "ef1a3421-ee3d-47d0-942b-e3507c44c175",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L11",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L11",
              "timedOut": false,
              "duration": 378,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello everybody\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Houston\\n#bot: Here are 3 hospitals near you:\\n  BUTTON(Cypress Creek Hospital | /inform{\\\"facility_id\\\":\\\"454108\\\"})\\n  BUTTON(Sun Behavioral Houston | /inform{\\\"facility_id\\\":\\\"454139\\\"})\\n  BUTTON(Us Pain & Spine Hospital | /inform{\\\"facility_id\\\":\\\"450797\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "8796ae8e-be7a-4a99-af9e-990ec762db41",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L12",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L12",
              "timedOut": false,
              "duration": 386,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello is anybody there\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: What is your current city?\\n#me: Houston\\n#bot: Here are 3 hospitals near you:\\n  BUTTON(Cypress Creek Hospital | /inform{\\\"facility_id\\\":\\\"454108\\\"})\\n  BUTTON(Sun Behavioral Houston | /inform{\\\"facility_id\\\":\\\"454139\\\"})\\n  BUTTON(Us Pain & Spine Hospital | /inform{\\\"facility_id\\\":\\\"450797\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b0aa2b23-b5e4-4e33-a783-3dce43671d56",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L13",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L13",
              "timedOut": false,
              "duration": 380,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello robot\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please provide your city name.\\n#me: Houston\\n#bot: Here are 3 hospitals near you:\\n  BUTTON(Cypress Creek Hospital | /inform{\\\"facility_id\\\":\\\"454108\\\"})\\n  BUTTON(Sun Behavioral Houston | /inform{\\\"facility_id\\\":\\\"454139\\\"})\\n  BUTTON(Us Pain & Spine Hospital | /inform{\\\"facility_id\\\":\\\"450797\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "49f3d49d-2ebd-4b81-84c6-dded5a833a73",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L14",
              "fullTitle": "Botium Test-Suite TC-TC-greet-!inform-!inform.!-convo.case6/GREET_USER-L14",
              "timedOut": false,
              "duration": 374,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Houston\\n#bot: Here are 3 hospitals near you:\\n  BUTTON(Cypress Creek Hospital | /inform{\\\"facility_id\\\":\\\"454108\\\"})\\n  BUTTON(Sun Behavioral Houston | /inform{\\\"facility_id\\\":\\\"454139\\\"})\\n  BUTTON(Us Pain & Spine Hospital | /inform{\\\"facility_id\\\":\\\"450797\\\"})\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "8d55aa1e-27fa-43f8-9f51-656a2ad362e7",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-goodbye-convo/GOODBYE_USER-L01",
              "fullTitle": "Botium Test-Suite TC-goodbye-convo/GOODBYE_USER-L01",
              "timedOut": false,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Bye\\n#bot: Until next time!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "58ea2368-9b9c-4138-92a3-c0462564cd02",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-goodbye-convo/GOODBYE_USER-L02",
              "fullTitle": "Botium Test-Suite TC-goodbye-convo/GOODBYE_USER-L02",
              "timedOut": false,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Bye!\\n#bot: Talk to you later!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "4239663e-cea9-4fbc-bb04-5a295c4df8ee",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-goodbye-convo/GOODBYE_USER-L03",
              "fullTitle": "Botium Test-Suite TC-goodbye-convo/GOODBYE_USER-L03",
              "timedOut": false,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Goodbye\\n#bot: Have a good day.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "605fa01a-7112-4773-be80-f391325ce8c7",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-goodbye-convo/GOODBYE_USER-L04",
              "fullTitle": "Botium Test-Suite TC-goodbye-convo/GOODBYE_USER-L04",
              "timedOut": false,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: See you later\\n#bot: Until next time!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "9e1a764a-aeb0-483f-adef-0ecb1f8aa4a0",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-goodbye-convo/GOODBYE_USER-L05",
              "fullTitle": "Botium Test-Suite TC-goodbye-convo/GOODBYE_USER-L05",
              "timedOut": false,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Bye bot\\n#bot: Talk to you later!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "19e19a3e-014d-454c-a59a-464157b38dd8",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-goodbye-convo/GOODBYE_USER-L06",
              "fullTitle": "Botium Test-Suite TC-goodbye-convo/GOODBYE_USER-L06",
              "timedOut": false,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Goodbye friend\\n#bot: Talk to you later!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "c0979fc2-964f-4684-bc09-ff397dc57d11",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-goodbye-convo/GOODBYE_USER-L07",
              "fullTitle": "Botium Test-Suite TC-goodbye-convo/GOODBYE_USER-L07",
              "timedOut": false,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: bye\\n#bot: Until next time!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "6969f6c3-6d84-42ba-bf8a-777686246f9c",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-goodbye-convo/GOODBYE_USER-L08",
              "fullTitle": "Botium Test-Suite TC-goodbye-convo/GOODBYE_USER-L08",
              "timedOut": false,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: bye for now\\n#bot: Talk to you later!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "d49e5447-0d76-49b6-a755-9baf54ae4261",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-goodbye-convo/GOODBYE_USER-L09",
              "fullTitle": "Botium Test-Suite TC-goodbye-convo/GOODBYE_USER-L09",
              "timedOut": false,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: catch you later\\n#bot: Talk to you later!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "6b7d781b-32f2-4d69-bc6d-c6fd1644c196",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-goodbye-convo/GOODBYE_USER-L10",
              "fullTitle": "Botium Test-Suite TC-goodbye-convo/GOODBYE_USER-L10",
              "timedOut": false,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: gotta go\\n#bot: Have a good day.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "c92f5156-85a7-4a9b-93be-1a9645ca248a",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-goodbye-convo/GOODBYE_USER-L11",
              "fullTitle": "Botium Test-Suite TC-goodbye-convo/GOODBYE_USER-L11",
              "timedOut": false,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: See you\\n#bot: Until next time!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "c5db5609-2aec-416f-9465-00275b153763",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-goodbye-convo/GOODBYE_USER-L12",
              "fullTitle": "Botium Test-Suite TC-goodbye-convo/GOODBYE_USER-L12",
              "timedOut": false,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: goodnight\\n#bot: Until next time!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "db3f4322-667b-4c64-8850-5078ab564867",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-goodbye-convo/GOODBYE_USER-L13",
              "fullTitle": "Botium Test-Suite TC-goodbye-convo/GOODBYE_USER-L13",
              "timedOut": false,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: have a nice day\\n#bot: Have a good day.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "3b7a0a61-d14f-4624-aaf8-b5e72d9b56d8",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-goodbye-convo/GOODBYE_USER-L14",
              "fullTitle": "Botium Test-Suite TC-goodbye-convo/GOODBYE_USER-L14",
              "timedOut": false,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: i'm off\\n#bot: Have a good day.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "bcbbe263-f8bb-43d3-b9c1-26a769754db4",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-goodbye-convo/GOODBYE_USER-L15",
              "fullTitle": "Botium Test-Suite TC-goodbye-convo/GOODBYE_USER-L15",
              "timedOut": false,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: see you later alligator\\n#bot: Talk to you later!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "379dcd20-a245-48f2-813a-9d83394d44d0",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-goodbye-convo/GOODBYE_USER-L16",
              "fullTitle": "Botium Test-Suite TC-goodbye-convo/GOODBYE_USER-L16",
              "timedOut": false,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: we'll speak soon\\n#bot: Talk to you later!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "8e3ccba1-3e11-42fd-91f3-c205f4a5de6e",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet!search_provider_11-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_11-L1",
              "fullTitle": "Botium Test-Suite TC-greet!search_provider_11-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_11-L1",
              "timedOut": false,
              "duration": 368,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: Good morning i am in Caguas i need a hospital\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "f32fec88-37c7-4bb5-ba15-cffbe8989fb7",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet!search_provider_11-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_11-L2",
              "fullTitle": "Botium Test-Suite TC-greet!search_provider_11-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_11-L2",
              "timedOut": false,
              "duration": 387,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hi i am in Caguas i need a hospital\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "f27b1630-f374-4c1e-b57a-eeda64dcd3ac",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet!search_provider_11-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_11-L3",
              "fullTitle": "Botium Test-Suite TC-greet!search_provider_11-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_11-L3",
              "timedOut": false,
              "duration": 374,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: Can you tell me a hospital in Caguas ?\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "579abe28-6227-4403-ba04-f7598c4c0919",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet!search_provider_11-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_11-L1",
              "fullTitle": "Botium Test-Suite TC-greet!search_provider_11-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_11-L1",
              "timedOut": false,
              "duration": 367,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: Good morning i am in Hammonton i need a hospital\\n#bot: Here is a hospital near you:\\n  BUTTON(Ancora Psych Hosp | /inform{\\\"facility_id\\\":\\\"314005\\\"})\\n#me: Thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "406ba318-871c-419f-869a-176a5a5ce8f7",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet!search_provider_11-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_11-L2",
              "fullTitle": "Botium Test-Suite TC-greet!search_provider_11-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_11-L2",
              "timedOut": false,
              "duration": 367,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hi i am in Hammonton i need a hospital\\n#bot: Here is a hospital near you:\\n  BUTTON(Ancora Psych Hosp | /inform{\\\"facility_id\\\":\\\"314005\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "5850ef94-e539-449b-8cde-a852e248cd94",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet!search_provider_11-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_11-L3",
              "fullTitle": "Botium Test-Suite TC-greet!search_provider_11-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_11-L3",
              "timedOut": false,
              "duration": 361,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: Can you tell me a hospital in Hammonton ?\\n#bot: Here is a hospital near you:\\n  BUTTON(Ancora Psych Hosp | /inform{\\\"facility_id\\\":\\\"314005\\\"})\\n#me: Thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "f07a4457-d80f-4d34-9fbe-25dbc836becf",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet!search_provider_11-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_11-L1",
              "fullTitle": "Botium Test-Suite TC-greet!search_provider_11-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_11-L1",
              "timedOut": false,
              "duration": 368,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: Good morning i am in Broussard i need a hospital\\n#bot: Here is a hospital near you:\\n  BUTTON(Oceans Hospital Of Broussard | /inform{\\\"facility_id\\\":\\\"194073\\\"})\\n#me: Thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "61198ac0-b596-4836-9616-263b653ad350",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet!search_provider_11-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_11-L2",
              "fullTitle": "Botium Test-Suite TC-greet!search_provider_11-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_11-L2",
              "timedOut": false,
              "duration": 365,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hi i am in Broussard i need a hospital\\n#bot: Here is a hospital near you:\\n  BUTTON(Oceans Hospital Of Broussard | /inform{\\\"facility_id\\\":\\\"194073\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "974cc246-ee22-4ab0-807c-90bd8a997f5b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet!search_provider_11-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_11-L3",
              "fullTitle": "Botium Test-Suite TC-greet!search_provider_11-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_11-L3",
              "timedOut": false,
              "duration": 369,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: Can you tell me a hospital in Broussard ?\\n#bot: Here is a hospital near you:\\n  BUTTON(Oceans Hospital Of Broussard | /inform{\\\"facility_id\\\":\\\"194073\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "822d3e03-53b3-4f74-870e-d8fbdf839bda",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet!search_provider_11-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_11-L1",
              "fullTitle": "Botium Test-Suite TC-greet!search_provider_11-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_11-L1",
              "timedOut": false,
              "duration": 365,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: Good morning i am in Magee i need a hospital\\n#bot: Here is a hospital near you:\\n  BUTTON(Magee General Hospital | /inform{\\\"facility_id\\\":\\\"250124\\\"})\\n#me: Thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "c8544ffc-53fa-4ce8-bef7-4295d84f6e3a",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet!search_provider_11-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_11-L2",
              "fullTitle": "Botium Test-Suite TC-greet!search_provider_11-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_11-L2",
              "timedOut": false,
              "duration": 374,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hi i am in Magee i need a hospital\\n#bot: Here is a hospital near you:\\n  BUTTON(Magee General Hospital | /inform{\\\"facility_id\\\":\\\"250124\\\"})\\n#me: Thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "70d5c8c3-cd2f-4e6a-846c-27b5bfa80be3",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet!search_provider_11-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_11-L3",
              "fullTitle": "Botium Test-Suite TC-greet!search_provider_11-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_11-L3",
              "timedOut": false,
              "duration": 353,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: Can you tell me a hospital in Magee ?\\n#bot: Here is a hospital near you:\\n  BUTTON(Magee General Hospital | /inform{\\\"facility_id\\\":\\\"250124\\\"})\\n#me: Thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "573f32f8-4b2a-4e9c-be30-b3079171e1a1",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet!search_provider_11-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_11-L1",
              "fullTitle": "Botium Test-Suite TC-greet!search_provider_11-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_11-L1",
              "timedOut": false,
              "duration": 354,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: Good morning i am in Houston i need a hospital\\n#bot: Here are 3 hospitals near you:\\n  BUTTON(Cypress Creek Hospital | /inform{\\\"facility_id\\\":\\\"454108\\\"})\\n  BUTTON(Sun Behavioral Houston | /inform{\\\"facility_id\\\":\\\"454139\\\"})\\n  BUTTON(Us Pain & Spine Hospital | /inform{\\\"facility_id\\\":\\\"450797\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b188b19b-7777-47db-9cf6-558c2b92793f",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet!search_provider_11-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_11-L2",
              "fullTitle": "Botium Test-Suite TC-greet!search_provider_11-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_11-L2",
              "timedOut": false,
              "duration": 355,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: hi i am in Houston i need a hospital\\n#bot: Here are 3 hospitals near you:\\n  BUTTON(Cypress Creek Hospital | /inform{\\\"facility_id\\\":\\\"454108\\\"})\\n  BUTTON(Sun Behavioral Houston | /inform{\\\"facility_id\\\":\\\"454139\\\"})\\n  BUTTON(Us Pain & Spine Hospital | /inform{\\\"facility_id\\\":\\\"450797\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "f0a2e64d-b695-40b8-a89c-8e5546cc909a",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet!search_provider_11-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_11-L3",
              "fullTitle": "Botium Test-Suite TC-greet!search_provider_11-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_11-L3",
              "timedOut": false,
              "duration": 372,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: Can you tell me a hospital in Houston ?\\n#bot: Here are 3 hospitals near you:\\n  BUTTON(Cypress Creek Hospital | /inform{\\\"facility_id\\\":\\\"454108\\\"})\\n  BUTTON(Sun Behavioral Houston | /inform{\\\"facility_id\\\":\\\"454139\\\"})\\n  BUTTON(Us Pain & Spine Hospital | /inform{\\\"facility_id\\\":\\\"450797\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "09e25dfb-a468-4172-923a-a18149372ffa",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L01",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L01",
              "timedOut": false,
              "duration": 478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "150171db-cad1-4e76-9051-6d86edc4c111",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L02",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L02",
              "timedOut": false,
              "duration": 496,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "7088ad43-1e87-424b-a19e-e5a0438f3989",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L03",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L03",
              "timedOut": false,
              "duration": 495,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you so much\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "d1d85fb0-daf7-4ed8-9cad-9517cc2c50d5",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L04",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L04",
              "timedOut": false,
              "duration": 481,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks bot\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "83dedda5-5bc8-4d05-938a-b148711aaae8",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L05",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L05",
              "timedOut": false,
              "duration": 484,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks for that\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "6257ca25-ab4f-477a-acc8-4998cd307f14",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L06",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L06",
              "timedOut": false,
              "duration": 492,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "de40509f-3540-4c23-8894-5071c912f4b0",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L07",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L07",
              "timedOut": false,
              "duration": 481,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers bro\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "aa632d13-c9e1-4df4-8280-87b1377c07b0",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L08",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L08",
              "timedOut": false,
              "duration": 497,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: perfect thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b91102e3-751e-499f-b24d-c1d8671e11b0",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L09",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L09",
              "timedOut": false,
              "duration": 481,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a bunch for everything\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "4edef34b-476b-4988-8924-437cb1dcbabd",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L10",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L10",
              "timedOut": false,
              "duration": 479,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks for the help\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b9ac3b0f-4a30-4d98-8db9-ee536a6b4c03",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L11",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L11",
              "timedOut": false,
              "duration": 485,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a lot\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "60d35a62-04d0-4b8c-b6b3-d7379eae7a56",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L12",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L12",
              "timedOut": false,
              "duration": 477,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: amazing, thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "bbb7f58d-ffa0-45f1-b837-ea0e2f5dde2a",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L13",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L13",
              "timedOut": false,
              "duration": 492,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool, thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "e671b4a9-1f12-4edb-86b9-8ef4a94b0c89",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L14",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L14",
              "timedOut": false,
              "duration": 480,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "df910d33-02e3-4b73-bbdb-4fab50223cb1",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L01",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L01",
              "timedOut": false,
              "duration": 488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "12ed90f1-3578-4fef-9603-b7b4a6d41a9a",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L02",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L02",
              "timedOut": false,
              "duration": 463,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "09fb0216-9aec-4a3a-824b-8fa38e65cd97",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L03",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L03",
              "timedOut": false,
              "duration": 483,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you so much\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "9ce07ac9-fccd-4fe3-964f-58c04608a40e",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L04",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L04",
              "timedOut": false,
              "duration": 482,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks bot\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "7e23b3d0-f3ef-46b5-a362-9b74d2bc0c9b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L05",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L05",
              "timedOut": false,
              "duration": 482,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks for that\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "a4bbd2c8-7ca5-4be6-b7c5-8ba7c1767ca4",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L06",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L06",
              "timedOut": false,
              "duration": 456,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "31ed33ee-347a-4b87-be27-bff1764a0bb7",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L07",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L07",
              "timedOut": false,
              "duration": 470,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers bro\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "271ada94-88b0-4c77-8931-1c5826d3a24a",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L08",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L08",
              "timedOut": false,
              "duration": 491,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: perfect thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "c0818ab9-b897-44c5-b065-a839d0a2021c",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L09",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L09",
              "timedOut": false,
              "duration": 471,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a bunch for everything\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "f7706d25-2edb-466a-9e79-49b1782a6327",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L10",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L10",
              "timedOut": false,
              "duration": 477,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks for the help\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "f2acc372-59bf-4705-92b4-41841a503c2b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L11",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L11",
              "timedOut": false,
              "duration": 474,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a lot\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "469c6dbf-dc17-4d2c-8daf-e084f3cb5881",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L12",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L12",
              "timedOut": false,
              "duration": 501,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: amazing, thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "45692f4e-5c7c-486a-b95a-c34db5e3e82c",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L13",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L13",
              "timedOut": false,
              "duration": 488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool, thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "d69e19f2-f2c5-47c7-a377-f159cac93252",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L14",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L14",
              "timedOut": false,
              "duration": 472,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "e65125d0-b740-451b-a1cb-97a9e080a9b8",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L01",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L01",
              "timedOut": false,
              "duration": 468,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "7d74fc0b-1dfc-455c-b69b-21a28e247138",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L02",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L02",
              "timedOut": false,
              "duration": 482,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "42cea838-d138-4269-9ef5-ba93f8747db5",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L03",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L03",
              "timedOut": false,
              "duration": 474,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you so much\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "8ce85dbc-462d-415a-bd9f-1644aee70e01",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L04",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L04",
              "timedOut": false,
              "duration": 478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks bot\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "09cae14a-d532-408a-bdc7-62ee2635c00b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L05",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L05",
              "timedOut": false,
              "duration": 469,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks for that\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "2c98a364-c95a-4c66-b575-d06c0393714b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L06",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L06",
              "timedOut": false,
              "duration": 465,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "abc22860-1182-461a-a26a-987117f21e09",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L07",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L07",
              "timedOut": false,
              "duration": 473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers bro\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "c4fa8fca-7e74-4f1b-acb7-66ed970c4872",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L08",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L08",
              "timedOut": false,
              "duration": 473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: perfect thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "d153ba75-a81b-403a-86d1-d9ee04e94b47",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L09",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L09",
              "timedOut": false,
              "duration": 472,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a bunch for everything\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "a869925d-b86f-4ad8-8987-e64e79a5e01d",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L10",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L10",
              "timedOut": false,
              "duration": 473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks for the help\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "c76b01e1-4c73-4704-90ab-c4a2545264ef",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L11",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L11",
              "timedOut": false,
              "duration": 466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a lot\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "3491b5cc-b2b6-439f-83f6-505eeca5fb35",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L12",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L12",
              "timedOut": false,
              "duration": 481,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: amazing, thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "af375245-0e1b-461e-8a8c-3a8bdb103d7b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L13",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L13",
              "timedOut": false,
              "duration": 473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool, thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "1aab6731-c1d6-41a0-90c0-62b97848fd03",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L14",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case0/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L14",
              "timedOut": false,
              "duration": 473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "4a2084cd-83ab-458d-998e-0c82f15d13fd",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L01",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L01",
              "timedOut": false,
              "duration": 459,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "374f69c9-70a9-4a62-bb1c-3a2e917e4748",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L02",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L02",
              "timedOut": false,
              "duration": 466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "7aa2140b-2180-4358-920b-d6b9bc83060c",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L03",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L03",
              "timedOut": false,
              "duration": 468,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you so much\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "0d5834be-ee2a-4dda-afc8-f66aac0b4517",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L04",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L04",
              "timedOut": false,
              "duration": 469,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks bot\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "3b8eff70-4d21-4747-b0e9-7a6e79ccd824",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L05",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L05",
              "timedOut": false,
              "duration": 718,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks for that\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "8bcc8132-c39e-4ff2-8bbd-69e88c716352",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L06",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L06",
              "timedOut": false,
              "duration": 514,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "0a84f2bf-6a2c-43fc-a0eb-63e01bf7e091",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L07",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L07",
              "timedOut": false,
              "duration": 494,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers bro\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "0f9933fa-ec11-45ee-89ba-c57dec8b6a96",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L08",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L08",
              "timedOut": false,
              "duration": 502,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: perfect thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b38a4aa0-ca48-4d3c-b0af-28cf005601e1",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L09",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L09",
              "timedOut": false,
              "duration": 504,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a bunch for everything\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b9265457-f6e2-4df4-ba5d-e8ccbe2cd682",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L10",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L10",
              "timedOut": false,
              "duration": 492,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks for the help\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "5b385942-50a1-410b-938d-3c6db03a318e",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L11",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L11",
              "timedOut": false,
              "duration": 490,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a lot\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "bc6972e0-418c-41eb-921f-518aedffadc4",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L12",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L12",
              "timedOut": false,
              "duration": 483,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: amazing, thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "1b943dfb-14ca-4300-bb8c-7b7c4df08847",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L13",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L13",
              "timedOut": false,
              "duration": 494,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool, thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b957ec81-219e-4217-97b2-38227e5b4c21",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L14",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L14",
              "timedOut": false,
              "duration": 490,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "7b9b0032-95ed-46bb-989b-6cf0432f6519",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L01",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L01",
              "timedOut": false,
              "duration": 482,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "4c6638cc-3a0e-433b-a2b2-a95d5f8a5e52",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L02",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L02",
              "timedOut": false,
              "duration": 491,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "e88b9fc1-22ea-494f-894c-085890bed859",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L03",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L03",
              "timedOut": false,
              "duration": 494,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you so much\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "c014d93c-7976-427a-9049-9fea96343e39",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L04",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L04",
              "timedOut": false,
              "duration": 477,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks bot\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "e40f3c13-a36a-41a2-9fac-267df87ae407",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L05",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L05",
              "timedOut": false,
              "duration": 481,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks for that\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "95afd1b8-55b2-4b93-8a8d-2f875bcb2b08",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L06",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L06",
              "timedOut": false,
              "duration": 486,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "5f87a81b-0bda-4b42-afe0-76dc1b651677",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L07",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L07",
              "timedOut": false,
              "duration": 507,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers bro\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b1ea00ad-30fc-4afd-93f1-7ec1f817544d",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L08",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L08",
              "timedOut": false,
              "duration": 485,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: perfect thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "3be6c702-b125-4ee4-a646-0c62a033c487",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L09",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L09",
              "timedOut": false,
              "duration": 481,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a bunch for everything\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b110b4dd-efbd-4e1c-ac95-b21f02ebf12b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L10",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L10",
              "timedOut": false,
              "duration": 483,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks for the help\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "882409ce-3248-4d21-b1da-f13e4b7de877",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L11",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L11",
              "timedOut": false,
              "duration": 482,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a lot\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "f5835373-ffa3-40d2-b47b-ba0ccc4e3366",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L12",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L12",
              "timedOut": false,
              "duration": 488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: amazing, thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "75d3c6fe-d5bf-4bae-a0f9-fe47dc36fe9a",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L13",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L13",
              "timedOut": false,
              "duration": 468,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool, thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "10a2e900-a123-46ff-a22c-1e3f55ca70b4",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L14",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L14",
              "timedOut": false,
              "duration": 485,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "47f70ea8-d9ee-491c-9164-6a8c2350d979",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L01",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L01",
              "timedOut": false,
              "duration": 484,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "9e167775-ff0b-467e-9fd3-ef2c9b86e498",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L02",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L02",
              "timedOut": false,
              "duration": 482,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "756d98d5-25ce-4e29-9dc6-5194b5137280",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L03",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L03",
              "timedOut": false,
              "duration": 490,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you so much\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "eb6e8352-14ce-49ed-af63-9ebf089648a2",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L04",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L04",
              "timedOut": false,
              "duration": 478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks bot\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "e399cc43-9ec5-4e95-bad8-8ebb3688c9c3",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L05",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L05",
              "timedOut": false,
              "duration": 489,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks for that\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "5d5e7809-753c-4dab-a1a4-a48e2fc3c7ea",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L06",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L06",
              "timedOut": false,
              "duration": 482,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "c6bc35d6-30c4-4922-b1e5-aa518bd58075",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L07",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L07",
              "timedOut": false,
              "duration": 461,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers bro\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "8fa08efe-2541-4b81-a857-20a50f242b28",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L08",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L08",
              "timedOut": false,
              "duration": 474,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: perfect thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "4eb7a293-bc55-48d2-b05b-e10ff0cb9c12",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L09",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L09",
              "timedOut": false,
              "duration": 473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a bunch for everything\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "132222e1-ba08-4366-8f75-ea1a380a4ee0",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L10",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L10",
              "timedOut": false,
              "duration": 485,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks for the help\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "f1cb87a4-2c57-4593-8dfb-ad971723d8b3",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L11",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L11",
              "timedOut": false,
              "duration": 473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a lot\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b1422c00-9b27-4588-b34a-a820a5180edf",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L12",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L12",
              "timedOut": false,
              "duration": 479,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: amazing, thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "2854b6e5-680f-4e2a-a120-548118e4f08b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L13",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L13",
              "timedOut": false,
              "duration": 471,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool, thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "425d031d-5ea5-4962-92a2-fb6b16fa9753",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L14",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case1/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L14",
              "timedOut": false,
              "duration": 480,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "584b7274-6542-4f30-9e6a-88702d7cc727",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L01",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L01",
              "timedOut": false,
              "duration": 490,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "bc9b7a00-51bf-4208-92a4-99842317693a",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L02",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L02",
              "timedOut": false,
              "duration": 477,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "ee58a546-e18b-42b7-9359-643917493235",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L03",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L03",
              "timedOut": false,
              "duration": 470,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you so much\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "157a20a2-a963-41d3-8087-5f84829afe9e",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L04",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L04",
              "timedOut": false,
              "duration": 478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks bot\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "7213fa5d-36a6-4739-b46d-17018d938cb0",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L05",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L05",
              "timedOut": false,
              "duration": 491,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks for that\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "78f9097b-4088-44f5-bc49-d9f42a46fce4",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L06",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L06",
              "timedOut": false,
              "duration": 477,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "305aae88-8c39-4930-93e8-ac9d447d87eb",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L07",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L07",
              "timedOut": false,
              "duration": 471,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers bro\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "f84098bb-6673-444f-b1a1-d2ced8ccc6a5",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L08",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L08",
              "timedOut": false,
              "duration": 468,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: perfect thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "e5f1e598-c48a-483e-948a-d6ea624dd337",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L09",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L09",
              "timedOut": false,
              "duration": 478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a bunch for everything\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b43ecf4e-abf9-461e-a838-23b918d27a7d",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L10",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L10",
              "timedOut": false,
              "duration": 461,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks for the help\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "fb8bc788-84e0-409d-9281-3430e0b31943",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L11",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L11",
              "timedOut": false,
              "duration": 475,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a lot\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "0a76d834-7959-47ac-bf49-9a6cc0cc7d8b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L12",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L12",
              "timedOut": false,
              "duration": 479,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: amazing, thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "8be9fd5d-8323-4b59-bfd1-a7d41f1593d4",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L13",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L13",
              "timedOut": false,
              "duration": 465,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool, thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "e3fe5464-57e0-41fe-97fa-d5d36ecb9e62",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L14",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L14",
              "timedOut": false,
              "duration": 490,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "65644f03-4478-4b45-89c9-750519ec2fdc",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L01",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L01",
              "timedOut": false,
              "duration": 470,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "f45c3728-99a1-4f95-9a1b-096f83089d7a",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L02",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L02",
              "timedOut": false,
              "duration": 468,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "330908eb-f045-4620-a647-06c1e4696182",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L03",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L03",
              "timedOut": false,
              "duration": 478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you so much\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "f65c4236-d7f4-4c41-9bbf-cd627da86d89",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L04",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L04",
              "timedOut": false,
              "duration": 478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks bot\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "157731ff-8202-4768-8ea5-557a0880d8e9",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L05",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L05",
              "timedOut": false,
              "duration": 471,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks for that\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "591e1ea4-4a26-4395-8948-611138dc77f0",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L06",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L06",
              "timedOut": false,
              "duration": 472,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "315b6baf-1deb-41bb-b71e-1d3c089a48e5",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L07",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L07",
              "timedOut": false,
              "duration": 476,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers bro\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "63d7a732-b446-454f-9bdc-4f078b6d0fc6",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L08",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L08",
              "timedOut": false,
              "duration": 471,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: perfect thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "8ba1f5ba-cc08-4e50-b422-80434aca6bf2",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L09",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L09",
              "timedOut": false,
              "duration": 490,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a bunch for everything\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "c04201ec-e3d3-47e8-b553-e0be019d517c",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L10",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L10",
              "timedOut": false,
              "duration": 467,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks for the help\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "64ae3050-2f0a-47d5-b6b8-f88bf317d452",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L11",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L11",
              "timedOut": false,
              "duration": 470,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a lot\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "e0d1d759-dc58-47ce-9165-42e003ad71b7",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L12",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L12",
              "timedOut": false,
              "duration": 477,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: amazing, thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "79ecff3f-10cb-46da-8acc-1d468fecf829",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L13",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L13",
              "timedOut": false,
              "duration": 455,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool, thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "8d07d747-6567-459b-83e7-b72372363edc",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L14",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L14",
              "timedOut": false,
              "duration": 470,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "871fbcb4-05d9-4d29-b802-8f53d77acc70",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L01",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L01",
              "timedOut": false,
              "duration": 472,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b0d0e0af-423e-4f87-8f20-436fee994fa3",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L02",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L02",
              "timedOut": false,
              "duration": 485,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "534a5e48-cec4-45bc-8ade-8a6dd5ecbdaf",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L03",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L03",
              "timedOut": false,
              "duration": 466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you so much\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "f5134ac3-dd6e-468d-8783-6e28ef1824f2",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L04",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L04",
              "timedOut": false,
              "duration": 476,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks bot\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b281642b-3a5c-4310-9d97-c232f68b721f",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L05",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L05",
              "timedOut": false,
              "duration": 476,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks for that\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "4ead57d5-9e95-4c58-ad64-31424ab385a8",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L06",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L06",
              "timedOut": false,
              "duration": 734,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "d5a6d535-82dd-40f0-a8ce-03611bbc7d86",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L07",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L07",
              "timedOut": false,
              "duration": 488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers bro\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "ff1234e5-e675-4d7b-a1b8-719c55b6fb8b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L08",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L08",
              "timedOut": false,
              "duration": 497,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: perfect thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "0250cf21-a21b-46b8-98ce-6f89efb6c4de",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L09",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L09",
              "timedOut": false,
              "duration": 498,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a bunch for everything\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "5f579bfd-285b-4b71-98eb-0d0399d0ad92",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L10",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L10",
              "timedOut": false,
              "duration": 496,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks for the help\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "f1089741-3671-4175-827e-06999c4fbbf2",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L11",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L11",
              "timedOut": false,
              "duration": 525,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a lot\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "ffc997f2-a52a-4a97-8f9d-c3bbdc55c359",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L12",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L12",
              "timedOut": false,
              "duration": 503,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: amazing, thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "033c9de4-ce15-4dcd-ad17-c5bb876bc4b3",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L13",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L13",
              "timedOut": false,
              "duration": 502,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool, thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "ca675023-1403-460c-82c8-b17c0ea332b0",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L14",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case2/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L14",
              "timedOut": false,
              "duration": 524,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "5ab42d91-cfa7-4c79-973a-531b5b3eff3a",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L01",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L01",
              "timedOut": false,
              "duration": 514,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "316fe4b3-22e2-43ee-8187-78521d4c87b6",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L02",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L02",
              "timedOut": false,
              "duration": 509,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "dc073feb-a7cc-406d-8207-4616849b68dc",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L03",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L03",
              "timedOut": false,
              "duration": 511,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you so much\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "0c6ead78-41e6-4f22-981e-594c77e531ea",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L04",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L04",
              "timedOut": false,
              "duration": 503,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks bot\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b5806aad-feb5-4c2d-8039-e18f616271d3",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L05",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L05",
              "timedOut": false,
              "duration": 490,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks for that\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "0f3ab768-17b8-4087-b9a8-11843cba7dc7",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L06",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L06",
              "timedOut": false,
              "duration": 498,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "94fdabf1-aa24-418c-aaef-de55fd6f6d30",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L07",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L07",
              "timedOut": false,
              "duration": 499,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers bro\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "42141c57-5c09-4c40-97be-db44fa1d72f8",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L08",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L08",
              "timedOut": false,
              "duration": 492,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: perfect thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "7f862af1-6dab-47d3-830c-010f2fce7de3",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L09",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L09",
              "timedOut": false,
              "duration": 498,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a bunch for everything\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "3af18cd8-78fa-4a02-adc5-7c2b52d3fe87",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L10",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L10",
              "timedOut": false,
              "duration": 489,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks for the help\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "261d7c8c-4aa5-4bd2-a9d1-99a4242e8179",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L11",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L11",
              "timedOut": false,
              "duration": 474,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a lot\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "5a6e15a9-ec5e-482e-93a6-0542961c82f0",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L12",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L12",
              "timedOut": false,
              "duration": 487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: amazing, thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "2f2a0272-4db0-41b3-83d4-ce896536496b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L13",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L13",
              "timedOut": false,
              "duration": 483,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool, thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "f05a40f9-2305-4f57-a901-8a7056746854",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L14",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L14",
              "timedOut": false,
              "duration": 517,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "71906068-1f1d-48d7-8a0a-2ce7b82f8435",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L01",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L01",
              "timedOut": false,
              "duration": 511,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "5940dbad-d44c-4920-bfda-a97df45209ec",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L02",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L02",
              "timedOut": false,
              "duration": 546,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "4f5f3d25-b928-4b80-85e7-cc899b2e3c2e",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L03",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L03",
              "timedOut": false,
              "duration": 559,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you so much\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "001d2f04-e304-4774-8410-9dfd92e7e2b3",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L04",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L04",
              "timedOut": false,
              "duration": 513,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks bot\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "071bef4a-8d75-4f06-b3d7-21b8e5c727ca",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L05",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L05",
              "timedOut": false,
              "duration": 521,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks for that\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "874d12fb-66c9-4b01-9b95-7653fcf54a37",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L06",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L06",
              "timedOut": false,
              "duration": 550,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "ff355c27-492a-4e49-a5ec-184a094ebbe2",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L07",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L07",
              "timedOut": false,
              "duration": 532,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers bro\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "4cee41f2-1030-4fc4-acdd-98b382fbc2ee",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L08",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L08",
              "timedOut": false,
              "duration": 496,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: perfect thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "df959893-91bd-4a6a-9f5f-d51fa26dcfec",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L09",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L09",
              "timedOut": false,
              "duration": 622,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a bunch for everything\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "c8d0d3bf-5836-4211-bbd9-2630867f69f0",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L10",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L10",
              "timedOut": false,
              "duration": 630,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks for the help\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "09c58e21-b186-47bf-8dfe-a3e18ef8b723",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L11",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L11",
              "timedOut": false,
              "duration": 538,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a lot\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "35c41a28-6285-486f-8e37-670564ea235c",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L12",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L12",
              "timedOut": false,
              "duration": 491,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: amazing, thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "5294d258-0324-4174-b64f-601bfea38288",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L13",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L13",
              "timedOut": false,
              "duration": 509,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool, thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "3e6c1b87-a8db-4f23-b4b2-3a2e687ff001",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L14",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L14",
              "timedOut": false,
              "duration": 488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "e097abf4-0707-487c-94bb-23a5dcb91fb6",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L01",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L01",
              "timedOut": false,
              "duration": 482,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "35addbf8-cabf-4689-b746-d95adc542194",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L02",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L02",
              "timedOut": false,
              "duration": 497,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "fdd12931-7a4d-42ff-a8d2-f36c6eccc462",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L03",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L03",
              "timedOut": false,
              "duration": 494,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you so much\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "023c0fc1-f19e-4018-9743-a3de68a1396a",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L04",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L04",
              "timedOut": false,
              "duration": 495,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks bot\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "058dbab3-2b2b-4489-a955-2b69be0275d3",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L05",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L05",
              "timedOut": false,
              "duration": 485,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks for that\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "be4cda89-aa05-468e-ba8f-60fb9369d71f",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L06",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L06",
              "timedOut": false,
              "duration": 482,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "1f7be8d0-0eae-4c18-9b4d-ac8faec3f7e6",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L07",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L07",
              "timedOut": false,
              "duration": 500,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers bro\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "80c6fa76-2fbf-4613-bd27-031ed5e42a48",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L08",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L08",
              "timedOut": false,
              "duration": 502,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: perfect thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "0507a30e-c33b-4e91-a19f-ca4de9a508a6",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L09",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L09",
              "timedOut": false,
              "duration": 497,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a bunch for everything\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "f2c12ecb-3b4b-4341-97ca-29e3abfa5236",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L10",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L10",
              "timedOut": false,
              "duration": 488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks for the help\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "889cab31-c0ad-4572-a773-6362a5dc2666",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L11",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L11",
              "timedOut": false,
              "duration": 493,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a lot\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "c13c1625-002f-4448-995d-de7885e57d3a",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L12",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L12",
              "timedOut": false,
              "duration": 479,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: amazing, thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "a4c7d90c-08ba-4e3e-af46-8a997729504a",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L13",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L13",
              "timedOut": false,
              "duration": 487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool, thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "168e7fcc-b1a9-425c-b3ce-77ed87c8582f",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L14",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case5/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L14",
              "timedOut": false,
              "duration": 492,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "39e5b226-f7a6-4590-bf28-3b9de7b753d9",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L01",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L01",
              "timedOut": false,
              "duration": 489,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "61093c6d-5f88-4dd9-a24a-c1dfd98b52ff",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L02",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L02",
              "timedOut": false,
              "duration": 501,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "dde15d80-3381-4346-8eb9-868c5148d457",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L03",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L03",
              "timedOut": false,
              "duration": 488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you so much\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "624fa7e6-66ba-420e-9f51-eeeae84acf7e",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L04",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L04",
              "timedOut": false,
              "duration": 498,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks bot\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "24fb391c-5030-4b9d-8fa1-de13d8676451",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L05",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L05",
              "timedOut": false,
              "duration": 508,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks for that\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b7bb17d3-53f7-45c5-8396-f6cf55abccb4",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L06",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L06",
              "timedOut": false,
              "duration": 503,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "a246c828-ea32-42a5-b82c-2ce972b0df61",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L07",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L07",
              "timedOut": false,
              "duration": 491,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers bro\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "1a54c767-bb03-4568-b3b6-361a1b816fcb",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L08",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L08",
              "timedOut": false,
              "duration": 498,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: perfect thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b7456099-8668-493a-9fe1-3a8fd74fea5d",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L09",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L09",
              "timedOut": false,
              "duration": 492,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a bunch for everything\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "37a4a5e7-2067-48f8-b574-5e349f469669",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L10",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L10",
              "timedOut": false,
              "duration": 464,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks for the help\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "48d2a2a1-e337-47ca-866d-c24b7afcec0d",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L11",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L11",
              "timedOut": false,
              "duration": 509,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a lot\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "1c92dc2a-2525-4311-a0dc-e87c19a70872",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L12",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L12",
              "timedOut": false,
              "duration": 492,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: amazing, thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "84fb8902-2855-46a3-a21a-d3ce740efb44",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L13",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L13",
              "timedOut": false,
              "duration": 499,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool, thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "46b9dd47-1ebd-4eb1-9ebe-8e3d85dce234",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L14",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L1/THANKS_USER-L14",
              "timedOut": false,
              "duration": 498,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: I need a hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "21193e95-b09f-4803-a7db-2d87125a257a",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L01",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L01",
              "timedOut": false,
              "duration": 499,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "eef8b947-d116-444e-a4e2-96ecc0ec3762",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L02",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L02",
              "timedOut": false,
              "duration": 491,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "e4e6d086-e9b1-41f6-81d2-c6bf651a96af",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L03",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L03",
              "timedOut": false,
              "duration": 481,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you so much\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "c0c6322a-1a8b-4586-b2e6-0ca0a96f76e6",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L04",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L04",
              "timedOut": false,
              "duration": 480,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks bot\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "fd058d11-e75d-4d93-a286-00ce0fa91b07",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L05",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L05",
              "timedOut": false,
              "duration": 479,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks for that\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "9c457927-ea00-46fd-bc7c-a384d0b9f99b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L06",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L06",
              "timedOut": false,
              "duration": 489,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b1c93e0c-0b16-4551-b8ed-705f5b212f03",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L07",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L07",
              "timedOut": false,
              "duration": 471,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers bro\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "d9292661-539d-4601-b427-3cf37e7b7d53",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L08",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L08",
              "timedOut": false,
              "duration": 494,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: perfect thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "1fbadc13-bf37-48f9-ba01-6276786522ad",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L09",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L09",
              "timedOut": false,
              "duration": 534,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a bunch for everything\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "04ee1e0b-7fd9-4cf1-8634-207f9d04f4a7",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L10",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L10",
              "timedOut": false,
              "duration": 488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks for the help\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b7fa8c46-bfb9-4bb8-9f0c-f671a19f09f6",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L11",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L11",
              "timedOut": false,
              "duration": 473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a lot\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "44f164aa-2600-4a29-8590-b4bd9e792406",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L12",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L12",
              "timedOut": false,
              "duration": 500,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: amazing, thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "ed86e670-b6c8-420f-aac2-017db65c9704",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L13",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L13",
              "timedOut": false,
              "duration": 486,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool, thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "ed3b5151-1777-4241-b83f-22c046b6137b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L14",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L2/THANKS_USER-L14",
              "timedOut": false,
              "duration": 802,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: find me a nearby hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "2f88ffe1-76e4-43a7-8b3f-543a790d3a6d",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L01",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L01",
              "timedOut": false,
              "duration": 518,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "cab60798-335a-442c-819c-128ac679360f",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L02",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L02",
              "timedOut": false,
              "duration": 506,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "23a6ab76-6e57-499f-aa4a-ecc7e414a7d6",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L03",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L03",
              "timedOut": false,
              "duration": 525,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name or zip code.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you so much\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "d36519d7-084a-410d-bee9-1bcd7dab923e",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L04",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L04",
              "timedOut": false,
              "duration": 529,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks bot\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "2a4e4446-be0e-4bf3-8198-772b2967335b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L05",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L05",
              "timedOut": false,
              "duration": 552,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thanks for that\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "19e6d150-dd8d-4399-9c37-71957d8672ea",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L06",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L06",
              "timedOut": false,
              "duration": 534,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "d76ccdb6-a250-42f3-bda1-43fa4e6f1861",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L07",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L07",
              "timedOut": false,
              "duration": 504,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cheers bro\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "8d1d1500-6cfc-42a0-91ce-cc8dd2e5d74e",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L08",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L08",
              "timedOut": false,
              "duration": 500,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: perfect thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "e84fb101-aa7b-4b54-8756-9c428560ac3a",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L09",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L09",
              "timedOut": false,
              "duration": 505,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a bunch for everything\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "2a69de27-6618-4adb-8e84-c08b337308a3",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L10",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L10",
              "timedOut": false,
              "duration": 506,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please provide your city name.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks for the help\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "15898699-6d44-4f06-bc68-4843a03b10f2",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L11",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L11",
              "timedOut": false,
              "duration": 506,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hi. What are you looking for?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: thanks a lot\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "aede8a41-64c9-4b9e-99d3-bb3e9f61135b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L12",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L12",
              "timedOut": false,
              "duration": 489,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: amazing, thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "9ed68864-9a8d-4871-a7e4-f2210546eeac",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L13",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L13",
              "timedOut": false,
              "duration": 498,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hey there! Please choose one of the healthcare facility options:\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: Please enter your zip code or city name to find local providers.\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool, thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "5e94a0c0-6d0e-4bfd-b9fc-50a69c9f45dc",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L14",
              "fullTitle": "Botium Test-Suite TC-greet-!search_provider_01-!inform-!thanks-convo.case6/SEARCH_PROVIDER_USER_01-L3/THANKS_USER-L14",
              "timedOut": false,
              "duration": 506,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Hi\\n#bot: Hello! What can I help you find today?\\n  BUTTON(Hospital | /inform{\\\"facility_type\\\": \\\"hospital\\\"})\\n  BUTTON(Nursing Home | /inform{\\\"facility_type\\\": \\\"nursing_home\\\"})\\n  BUTTON(Home Health Agency | /inform{\\\"facility_type\\\": \\\"home_health\\\"})\\n#me: show me hospital\\n#bot: What is your current city?\\n#me: Caguas\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: cool thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "738d7a32-947e-48f0-a1f6-334e4a45b8d3",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-search_provider_01-!inform-!thanks-convo.case0",
              "fullTitle": "Botium Test-Suite TC-search_provider_01-!inform-!thanks-convo.case0",
              "timedOut": false,
              "duration": 258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Good morning i am in Caguas i need a hospital\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "e3a98977-44b5-48e7-bb03-6d8eb49439fb",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-search_provider_01-!inform-!thanks-convo.case1",
              "fullTitle": "Botium Test-Suite TC-search_provider_01-!inform-!thanks-convo.case1",
              "timedOut": false,
              "duration": 246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Good morning i am in Hammonton i need a hospital\\n#bot: Here is a hospital near you:\\n  BUTTON(Ancora Psych Hosp | /inform{\\\"facility_id\\\":\\\"314005\\\"})\\n#me: Thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "704fd593-acb0-498c-9e78-e426756a6de5",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-search_provider_01-!inform-!thanks-convo.case2",
              "fullTitle": "Botium Test-Suite TC-search_provider_01-!inform-!thanks-convo.case2",
              "timedOut": false,
              "duration": 256,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Good morning i am in Broussard i need a hospital\\n#bot: Here is a hospital near you:\\n  BUTTON(Oceans Hospital Of Broussard | /inform{\\\"facility_id\\\":\\\"194073\\\"})\\n#me: Thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "d7759bdb-3973-456e-8483-dda9ae78fe2d",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-search_provider_01-!inform-!thanks-convo.case5",
              "fullTitle": "Botium Test-Suite TC-search_provider_01-!inform-!thanks-convo.case5",
              "timedOut": false,
              "duration": 253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Good morning i am in Magee i need a hospital\\n#bot: Here is a hospital near you:\\n  BUTTON(Magee General Hospital | /inform{\\\"facility_id\\\":\\\"250124\\\"})\\n#me: Thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "40f6d918-e5f8-4acc-a1c6-184db6379e99",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-search_provider_01-!inform-!thanks-convo.case6",
              "fullTitle": "Botium Test-Suite TC-search_provider_01-!inform-!thanks-convo.case6",
              "timedOut": false,
              "duration": 242,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Good morning i am in Houston i need a hospital\\n#bot: Here are 3 hospitals near you:\\n  BUTTON(Cypress Creek Hospital | /inform{\\\"facility_id\\\":\\\"454108\\\"})\\n  BUTTON(Sun Behavioral Houston | /inform{\\\"facility_id\\\":\\\"454139\\\"})\\n  BUTTON(Us Pain & Spine Hospital | /inform{\\\"facility_id\\\":\\\"450797\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "59fb7dc4-6463-46cf-bb87-47e4cc0cf48e",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-search_provider_11-!inform-!thanks-convo.case0",
              "fullTitle": "Botium Test-Suite TC-search_provider_11-!inform-!thanks-convo.case0",
              "timedOut": false,
              "duration": 254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Good morning i am in Caguas i need a hospital\\n#bot: Here is a hospital near you:\\n  BUTTON(Hima San Pablo-Caguas | /inform{\\\"facility_id\\\":\\\"400120\\\"})\\n#me: Thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "2e4dd39c-4b9b-4ea3-97c5-3348b7cc384f",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-search_provider_11-!inform-!thanks-convo.case1",
              "fullTitle": "Botium Test-Suite TC-search_provider_11-!inform-!thanks-convo.case1",
              "timedOut": false,
              "duration": 244,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Good morning i am in Hammonton i need a hospital\\n#bot: Here is a hospital near you:\\n  BUTTON(Ancora Psych Hosp | /inform{\\\"facility_id\\\":\\\"314005\\\"})\\n#me: Thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "e3544248-6acc-44e3-9e87-959385ab1ba7",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-search_provider_11-!inform-!thanks-convo.case2",
              "fullTitle": "Botium Test-Suite TC-search_provider_11-!inform-!thanks-convo.case2",
              "timedOut": false,
              "duration": 280,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Good morning i am in Broussard i need a hospital\\n#bot: Here is a hospital near you:\\n  BUTTON(Oceans Hospital Of Broussard | /inform{\\\"facility_id\\\":\\\"194073\\\"})\\n#me: Thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "90aa6fd9-5cbf-40fe-ab70-27449c0fd4a0",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-search_provider_11-!inform-!thanks-convo.case5",
              "fullTitle": "Botium Test-Suite TC-search_provider_11-!inform-!thanks-convo.case5",
              "timedOut": false,
              "duration": 257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Good morning i am in Magee i need a hospital\\n#bot: Here is a hospital near you:\\n  BUTTON(Magee General Hospital | /inform{\\\"facility_id\\\":\\\"250124\\\"})\\n#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "ad11bc19-5d56-4017-b3c1-145675316462",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-search_provider_11-!inform-!thanks-convo.case6",
              "fullTitle": "Botium Test-Suite TC-search_provider_11-!inform-!thanks-convo.case6",
              "timedOut": false,
              "duration": 245,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Good morning i am in Houston i need a hospital\\n#bot: Here are 3 hospitals near you:\\n  BUTTON(Cypress Creek Hospital | /inform{\\\"facility_id\\\":\\\"454108\\\"})\\n  BUTTON(Sun Behavioral Houston | /inform{\\\"facility_id\\\":\\\"454139\\\"})\\n  BUTTON(Us Pain & Spine Hospital | /inform{\\\"facility_id\\\":\\\"450797\\\"})\\n#me: Thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "727308d6-a294-4c03-afe2-964a945a191b",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-thanks-convo/THANKS_USER-L01",
              "fullTitle": "Botium Test-Suite TC-thanks-convo/THANKS_USER-L01",
              "timedOut": false,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "3d93c9c5-f995-4e62-b318-6757d6479e16",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-thanks-convo/THANKS_USER-L02",
              "fullTitle": "Botium Test-Suite TC-thanks-convo/THANKS_USER-L02",
              "timedOut": false,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "492d2921-895c-48f8-9726-30b3100bc346",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-thanks-convo/THANKS_USER-L03",
              "fullTitle": "Botium Test-Suite TC-thanks-convo/THANKS_USER-L03",
              "timedOut": false,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Thank you so much\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "42e8a52d-98d2-4d82-b8ad-42d85b1b5040",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-thanks-convo/THANKS_USER-L04",
              "fullTitle": "Botium Test-Suite TC-thanks-convo/THANKS_USER-L04",
              "timedOut": false,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Thanks bot\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "3a9f908e-2697-45ef-8471-2481ba4e59c1",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-thanks-convo/THANKS_USER-L05",
              "fullTitle": "Botium Test-Suite TC-thanks-convo/THANKS_USER-L05",
              "timedOut": false,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Thanks for that\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "13eb5317-7d55-4232-881a-203508d6a180",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-thanks-convo/THANKS_USER-L06",
              "fullTitle": "Botium Test-Suite TC-thanks-convo/THANKS_USER-L06",
              "timedOut": false,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: cheers\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "834479d3-a7be-4457-afbd-8cf6c273c1d1",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-thanks-convo/THANKS_USER-L07",
              "fullTitle": "Botium Test-Suite TC-thanks-convo/THANKS_USER-L07",
              "timedOut": false,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: cheers bro\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "1342de8b-186f-47bb-a073-e72d53e9444d",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-thanks-convo/THANKS_USER-L08",
              "fullTitle": "Botium Test-Suite TC-thanks-convo/THANKS_USER-L08",
              "timedOut": false,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: perfect thank you\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "423e19fa-afce-4071-a16e-0297bd6dcc1e",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-thanks-convo/THANKS_USER-L09",
              "fullTitle": "Botium Test-Suite TC-thanks-convo/THANKS_USER-L09",
              "timedOut": false,
              "duration": 126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: thanks a bunch for everything\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "24ff8881-4040-4f63-9459-3e86eba44580",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-thanks-convo/THANKS_USER-L10",
              "fullTitle": "Botium Test-Suite TC-thanks-convo/THANKS_USER-L10",
              "timedOut": false,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: thanks for the help\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "804f0246-4b87-4a9a-b506-8cae2d6df72a",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-thanks-convo/THANKS_USER-L11",
              "fullTitle": "Botium Test-Suite TC-thanks-convo/THANKS_USER-L11",
              "timedOut": false,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: thanks a lot\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "72c717db-b41b-4682-aae2-29007426b61f",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-thanks-convo/THANKS_USER-L12",
              "fullTitle": "Botium Test-Suite TC-thanks-convo/THANKS_USER-L12",
              "timedOut": false,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: amazing, thanks\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "412cb36d-2df5-411d-920f-2a3fe619565e",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-thanks-convo/THANKS_USER-L13",
              "fullTitle": "Botium Test-Suite TC-thanks-convo/THANKS_USER-L13",
              "timedOut": false,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: cool, thanks\\n#bot: You are welcome!\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "dc19e031-df21-4e80-a834-388a302a3d43",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC-thanks-convo/THANKS_USER-L14",
              "fullTitle": "Botium Test-Suite TC-thanks-convo/THANKS_USER-L14",
              "timedOut": false,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: cool thank you\\n#bot: My pleasure.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "d63a1e71-b702-4c5a-a885-1cf0a2c4cdc1",
              "parentUUID": "efcd0c00-5fcb-42cf-a71e-5d92075b3bf9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7bc0484a-2cc7-4179-a1c0-35940b3c3978",
            "6a625ede-2277-40b6-8772-64b091ea2b2d",
            "6387dd87-8465-4406-9048-f24f4f20ed0e",
            "8d117c35-4f23-47ac-be67-d5b3b07ac402",
            "96153637-4809-48f2-8d96-67a7ad43c8c5",
            "8da9d5fd-ef68-4750-91d2-f99667be4399",
            "cb131604-619c-46b1-9d98-58902b4d03a4",
            "1e86d258-4b45-4e4e-b6f5-803734cbacd1",
            "25fc6225-4a8d-4abe-936a-477f7fc239f6",
            "d560eaa9-b0b7-4c98-9b04-a16f4ffc0e61",
            "6dc319c2-9561-4216-be16-d900eb634621",
            "85d207af-a6e0-4f35-9374-450248e63e33",
            "8b7107da-071a-4545-b168-2b85c44f630e",
            "fd899980-6067-460d-8a9d-cce78e00b838",
            "5f5807b2-563f-47e7-a932-5b02d90e7261",
            "443330ca-a926-457b-88db-654554c0dafa",
            "3eb04b9d-69a3-4874-9f87-f5fb2f1e4b08",
            "6dfeaa1f-2330-4457-9d24-241923297035",
            "fae2712b-4c7d-42b3-afe7-4fc4e90f77d6",
            "677b9ef9-31d1-4a38-9054-f2a198aa1b84",
            "623c7bad-f7a0-49bb-85a3-e055313784a1",
            "879a9ce7-40a8-479d-97c6-6910b9cc4cdc",
            "ac1c633c-7cd7-4e26-98b7-171e15426856",
            "27d2d43e-3b00-4bce-9ee7-b5d98006eaf4",
            "99874046-f230-41cd-95bc-64bf571a4092",
            "5f07b1d5-5702-413c-beea-7727e4914bee",
            "6a03bcf3-d455-49fd-a9de-c3df9b7340a2",
            "ea476972-e053-4aac-9f33-3b4c311a4677",
            "824accae-9874-4ac5-be85-9058d0f7abd4",
            "ee823c8e-18e2-4a58-8ed8-d6de1ffe5a80",
            "ee38f214-13c4-48d7-95bd-31d63fa60e57",
            "972cbe9f-10ba-4d6a-92db-35b8f75c2afb",
            "51f911f3-363e-449b-a550-111ea4e0294f",
            "1a9ac646-3b29-444b-9049-b64edad6247f",
            "2baa5108-0c54-485c-b883-0f7d4e640cc6",
            "695088a6-b0b6-4695-b1d8-9c1490d3d642",
            "ba13b841-2c26-4745-969d-72b36f122d34",
            "4799438d-88c8-4025-9731-3e834108f469",
            "376efe02-4c0d-4736-9dab-94d704fc5f2b",
            "012d5c93-5240-4d9d-837c-0822d6d1c58d",
            "8569bbf6-c82d-4c68-b922-fe2750628bf0",
            "eccdf152-baee-4006-a7da-067989c57b98",
            "231341bd-e46f-45f8-9929-3b25d5671d63",
            "67570c80-d816-4562-bb97-0afaebc166c9",
            "391d18d5-4c6b-4367-9209-5d846403b5ee",
            "d5779610-487f-4107-8f55-f9ba20b50de2",
            "652bbe2f-ec02-4894-b08d-a0223cfa0f7c",
            "b4470b63-9353-4959-9b13-0d4297370123",
            "800baa3f-83c9-4833-93db-ffa21ef550eb",
            "4329cbbe-6d47-420b-9ef2-230459fdc4c5",
            "ad84f40e-59d1-4a89-a9f9-71b4b4588a88",
            "23821f94-e67d-4d9e-869b-e6b7c4da8466",
            "5a87a8b9-fcfb-4f31-8ec8-abb94a81d592",
            "bc43a068-cb53-4eda-b19d-45567a59ab8c",
            "61aa76c8-6c0b-4fae-876d-e6d57a953d7e",
            "4e5cfcdf-a725-4a0c-bfb2-3508bccc4d32",
            "9368bc99-a94f-4bcf-9cbd-4b23817ea664",
            "2a900c7f-e164-4b01-b6ef-fa49c75a0556",
            "ace7cca9-8fa9-47ac-bd43-23ddc110c6d2",
            "6a649bee-07ff-48ab-9c1b-8ba3bfbe78ea",
            "e6a9c55f-a092-4594-b4f2-ae78e9f66c2d",
            "6850fa8e-3a92-4307-b378-7efe3834fd39",
            "b1aed7ea-f979-4ac4-a86d-3c23ea7a4131",
            "b32af954-bc47-4048-ad31-d667d843a61b",
            "333eda0b-7448-4a42-aa3d-8a3438b8da7b",
            "ef1a3421-ee3d-47d0-942b-e3507c44c175",
            "8796ae8e-be7a-4a99-af9e-990ec762db41",
            "b0aa2b23-b5e4-4e33-a783-3dce43671d56",
            "49f3d49d-2ebd-4b81-84c6-dded5a833a73",
            "8d55aa1e-27fa-43f8-9f51-656a2ad362e7",
            "58ea2368-9b9c-4138-92a3-c0462564cd02",
            "4239663e-cea9-4fbc-bb04-5a295c4df8ee",
            "605fa01a-7112-4773-be80-f391325ce8c7",
            "9e1a764a-aeb0-483f-adef-0ecb1f8aa4a0",
            "19e19a3e-014d-454c-a59a-464157b38dd8",
            "c0979fc2-964f-4684-bc09-ff397dc57d11",
            "6969f6c3-6d84-42ba-bf8a-777686246f9c",
            "d49e5447-0d76-49b6-a755-9baf54ae4261",
            "6b7d781b-32f2-4d69-bc6d-c6fd1644c196",
            "c92f5156-85a7-4a9b-93be-1a9645ca248a",
            "c5db5609-2aec-416f-9465-00275b153763",
            "db3f4322-667b-4c64-8850-5078ab564867",
            "3b7a0a61-d14f-4624-aaf8-b5e72d9b56d8",
            "bcbbe263-f8bb-43d3-b9c1-26a769754db4",
            "379dcd20-a245-48f2-813a-9d83394d44d0",
            "8e3ccba1-3e11-42fd-91f3-c205f4a5de6e",
            "f32fec88-37c7-4bb5-ba15-cffbe8989fb7",
            "f27b1630-f374-4c1e-b57a-eeda64dcd3ac",
            "579abe28-6227-4403-ba04-f7598c4c0919",
            "406ba318-871c-419f-869a-176a5a5ce8f7",
            "5850ef94-e539-449b-8cde-a852e248cd94",
            "f07a4457-d80f-4d34-9fbe-25dbc836becf",
            "61198ac0-b596-4836-9616-263b653ad350",
            "974cc246-ee22-4ab0-807c-90bd8a997f5b",
            "822d3e03-53b3-4f74-870e-d8fbdf839bda",
            "c8544ffc-53fa-4ce8-bef7-4295d84f6e3a",
            "70d5c8c3-cd2f-4e6a-846c-27b5bfa80be3",
            "573f32f8-4b2a-4e9c-be30-b3079171e1a1",
            "b188b19b-7777-47db-9cf6-558c2b92793f",
            "f0a2e64d-b695-40b8-a89c-8e5546cc909a",
            "09e25dfb-a468-4172-923a-a18149372ffa",
            "150171db-cad1-4e76-9051-6d86edc4c111",
            "7088ad43-1e87-424b-a19e-e5a0438f3989",
            "d1d85fb0-daf7-4ed8-9cad-9517cc2c50d5",
            "83dedda5-5bc8-4d05-938a-b148711aaae8",
            "6257ca25-ab4f-477a-acc8-4998cd307f14",
            "de40509f-3540-4c23-8894-5071c912f4b0",
            "aa632d13-c9e1-4df4-8280-87b1377c07b0",
            "b91102e3-751e-499f-b24d-c1d8671e11b0",
            "4edef34b-476b-4988-8924-437cb1dcbabd",
            "b9ac3b0f-4a30-4d98-8db9-ee536a6b4c03",
            "60d35a62-04d0-4b8c-b6b3-d7379eae7a56",
            "bbb7f58d-ffa0-45f1-b837-ea0e2f5dde2a",
            "e671b4a9-1f12-4edb-86b9-8ef4a94b0c89",
            "df910d33-02e3-4b73-bbdb-4fab50223cb1",
            "12ed90f1-3578-4fef-9603-b7b4a6d41a9a",
            "09fb0216-9aec-4a3a-824b-8fa38e65cd97",
            "9ce07ac9-fccd-4fe3-964f-58c04608a40e",
            "7e23b3d0-f3ef-46b5-a362-9b74d2bc0c9b",
            "a4bbd2c8-7ca5-4be6-b7c5-8ba7c1767ca4",
            "31ed33ee-347a-4b87-be27-bff1764a0bb7",
            "271ada94-88b0-4c77-8931-1c5826d3a24a",
            "c0818ab9-b897-44c5-b065-a839d0a2021c",
            "f7706d25-2edb-466a-9e79-49b1782a6327",
            "f2acc372-59bf-4705-92b4-41841a503c2b",
            "469c6dbf-dc17-4d2c-8daf-e084f3cb5881",
            "45692f4e-5c7c-486a-b95a-c34db5e3e82c",
            "d69e19f2-f2c5-47c7-a377-f159cac93252",
            "e65125d0-b740-451b-a1cb-97a9e080a9b8",
            "7d74fc0b-1dfc-455c-b69b-21a28e247138",
            "42cea838-d138-4269-9ef5-ba93f8747db5",
            "8ce85dbc-462d-415a-bd9f-1644aee70e01",
            "09cae14a-d532-408a-bdc7-62ee2635c00b",
            "2c98a364-c95a-4c66-b575-d06c0393714b",
            "abc22860-1182-461a-a26a-987117f21e09",
            "c4fa8fca-7e74-4f1b-acb7-66ed970c4872",
            "d153ba75-a81b-403a-86d1-d9ee04e94b47",
            "a869925d-b86f-4ad8-8987-e64e79a5e01d",
            "c76b01e1-4c73-4704-90ab-c4a2545264ef",
            "3491b5cc-b2b6-439f-83f6-505eeca5fb35",
            "af375245-0e1b-461e-8a8c-3a8bdb103d7b",
            "1aab6731-c1d6-41a0-90c0-62b97848fd03",
            "4a2084cd-83ab-458d-998e-0c82f15d13fd",
            "374f69c9-70a9-4a62-bb1c-3a2e917e4748",
            "7aa2140b-2180-4358-920b-d6b9bc83060c",
            "0d5834be-ee2a-4dda-afc8-f66aac0b4517",
            "3b8eff70-4d21-4747-b0e9-7a6e79ccd824",
            "8bcc8132-c39e-4ff2-8bbd-69e88c716352",
            "0a84f2bf-6a2c-43fc-a0eb-63e01bf7e091",
            "0f9933fa-ec11-45ee-89ba-c57dec8b6a96",
            "b38a4aa0-ca48-4d3c-b0af-28cf005601e1",
            "b9265457-f6e2-4df4-ba5d-e8ccbe2cd682",
            "5b385942-50a1-410b-938d-3c6db03a318e",
            "bc6972e0-418c-41eb-921f-518aedffadc4",
            "1b943dfb-14ca-4300-bb8c-7b7c4df08847",
            "b957ec81-219e-4217-97b2-38227e5b4c21",
            "7b9b0032-95ed-46bb-989b-6cf0432f6519",
            "4c6638cc-3a0e-433b-a2b2-a95d5f8a5e52",
            "e88b9fc1-22ea-494f-894c-085890bed859",
            "c014d93c-7976-427a-9049-9fea96343e39",
            "e40f3c13-a36a-41a2-9fac-267df87ae407",
            "95afd1b8-55b2-4b93-8a8d-2f875bcb2b08",
            "5f87a81b-0bda-4b42-afe0-76dc1b651677",
            "b1ea00ad-30fc-4afd-93f1-7ec1f817544d",
            "3be6c702-b125-4ee4-a646-0c62a033c487",
            "b110b4dd-efbd-4e1c-ac95-b21f02ebf12b",
            "882409ce-3248-4d21-b1da-f13e4b7de877",
            "f5835373-ffa3-40d2-b47b-ba0ccc4e3366",
            "75d3c6fe-d5bf-4bae-a0f9-fe47dc36fe9a",
            "10a2e900-a123-46ff-a22c-1e3f55ca70b4",
            "47f70ea8-d9ee-491c-9164-6a8c2350d979",
            "9e167775-ff0b-467e-9fd3-ef2c9b86e498",
            "756d98d5-25ce-4e29-9dc6-5194b5137280",
            "eb6e8352-14ce-49ed-af63-9ebf089648a2",
            "e399cc43-9ec5-4e95-bad8-8ebb3688c9c3",
            "5d5e7809-753c-4dab-a1a4-a48e2fc3c7ea",
            "c6bc35d6-30c4-4922-b1e5-aa518bd58075",
            "8fa08efe-2541-4b81-a857-20a50f242b28",
            "4eb7a293-bc55-48d2-b05b-e10ff0cb9c12",
            "132222e1-ba08-4366-8f75-ea1a380a4ee0",
            "f1cb87a4-2c57-4593-8dfb-ad971723d8b3",
            "b1422c00-9b27-4588-b34a-a820a5180edf",
            "2854b6e5-680f-4e2a-a120-548118e4f08b",
            "425d031d-5ea5-4962-92a2-fb6b16fa9753",
            "584b7274-6542-4f30-9e6a-88702d7cc727",
            "bc9b7a00-51bf-4208-92a4-99842317693a",
            "ee58a546-e18b-42b7-9359-643917493235",
            "157a20a2-a963-41d3-8087-5f84829afe9e",
            "7213fa5d-36a6-4739-b46d-17018d938cb0",
            "78f9097b-4088-44f5-bc49-d9f42a46fce4",
            "305aae88-8c39-4930-93e8-ac9d447d87eb",
            "f84098bb-6673-444f-b1a1-d2ced8ccc6a5",
            "e5f1e598-c48a-483e-948a-d6ea624dd337",
            "b43ecf4e-abf9-461e-a838-23b918d27a7d",
            "fb8bc788-84e0-409d-9281-3430e0b31943",
            "0a76d834-7959-47ac-bf49-9a6cc0cc7d8b",
            "8be9fd5d-8323-4b59-bfd1-a7d41f1593d4",
            "e3fe5464-57e0-41fe-97fa-d5d36ecb9e62",
            "65644f03-4478-4b45-89c9-750519ec2fdc",
            "f45c3728-99a1-4f95-9a1b-096f83089d7a",
            "330908eb-f045-4620-a647-06c1e4696182",
            "f65c4236-d7f4-4c41-9bbf-cd627da86d89",
            "157731ff-8202-4768-8ea5-557a0880d8e9",
            "591e1ea4-4a26-4395-8948-611138dc77f0",
            "315b6baf-1deb-41bb-b71e-1d3c089a48e5",
            "63d7a732-b446-454f-9bdc-4f078b6d0fc6",
            "8ba1f5ba-cc08-4e50-b422-80434aca6bf2",
            "c04201ec-e3d3-47e8-b553-e0be019d517c",
            "64ae3050-2f0a-47d5-b6b8-f88bf317d452",
            "e0d1d759-dc58-47ce-9165-42e003ad71b7",
            "79ecff3f-10cb-46da-8acc-1d468fecf829",
            "8d07d747-6567-459b-83e7-b72372363edc",
            "871fbcb4-05d9-4d29-b802-8f53d77acc70",
            "b0d0e0af-423e-4f87-8f20-436fee994fa3",
            "534a5e48-cec4-45bc-8ade-8a6dd5ecbdaf",
            "f5134ac3-dd6e-468d-8783-6e28ef1824f2",
            "b281642b-3a5c-4310-9d97-c232f68b721f",
            "4ead57d5-9e95-4c58-ad64-31424ab385a8",
            "d5a6d535-82dd-40f0-a8ce-03611bbc7d86",
            "ff1234e5-e675-4d7b-a1b8-719c55b6fb8b",
            "0250cf21-a21b-46b8-98ce-6f89efb6c4de",
            "5f579bfd-285b-4b71-98eb-0d0399d0ad92",
            "f1089741-3671-4175-827e-06999c4fbbf2",
            "ffc997f2-a52a-4a97-8f9d-c3bbdc55c359",
            "033c9de4-ce15-4dcd-ad17-c5bb876bc4b3",
            "ca675023-1403-460c-82c8-b17c0ea332b0",
            "5ab42d91-cfa7-4c79-973a-531b5b3eff3a",
            "316fe4b3-22e2-43ee-8187-78521d4c87b6",
            "dc073feb-a7cc-406d-8207-4616849b68dc",
            "0c6ead78-41e6-4f22-981e-594c77e531ea",
            "b5806aad-feb5-4c2d-8039-e18f616271d3",
            "0f3ab768-17b8-4087-b9a8-11843cba7dc7",
            "94fdabf1-aa24-418c-aaef-de55fd6f6d30",
            "42141c57-5c09-4c40-97be-db44fa1d72f8",
            "7f862af1-6dab-47d3-830c-010f2fce7de3",
            "3af18cd8-78fa-4a02-adc5-7c2b52d3fe87",
            "261d7c8c-4aa5-4bd2-a9d1-99a4242e8179",
            "5a6e15a9-ec5e-482e-93a6-0542961c82f0",
            "2f2a0272-4db0-41b3-83d4-ce896536496b",
            "f05a40f9-2305-4f57-a901-8a7056746854",
            "71906068-1f1d-48d7-8a0a-2ce7b82f8435",
            "5940dbad-d44c-4920-bfda-a97df45209ec",
            "4f5f3d25-b928-4b80-85e7-cc899b2e3c2e",
            "001d2f04-e304-4774-8410-9dfd92e7e2b3",
            "071bef4a-8d75-4f06-b3d7-21b8e5c727ca",
            "874d12fb-66c9-4b01-9b95-7653fcf54a37",
            "ff355c27-492a-4e49-a5ec-184a094ebbe2",
            "4cee41f2-1030-4fc4-acdd-98b382fbc2ee",
            "df959893-91bd-4a6a-9f5f-d51fa26dcfec",
            "c8d0d3bf-5836-4211-bbd9-2630867f69f0",
            "09c58e21-b186-47bf-8dfe-a3e18ef8b723",
            "35c41a28-6285-486f-8e37-670564ea235c",
            "5294d258-0324-4174-b64f-601bfea38288",
            "3e6c1b87-a8db-4f23-b4b2-3a2e687ff001",
            "e097abf4-0707-487c-94bb-23a5dcb91fb6",
            "35addbf8-cabf-4689-b746-d95adc542194",
            "fdd12931-7a4d-42ff-a8d2-f36c6eccc462",
            "023c0fc1-f19e-4018-9743-a3de68a1396a",
            "058dbab3-2b2b-4489-a955-2b69be0275d3",
            "be4cda89-aa05-468e-ba8f-60fb9369d71f",
            "1f7be8d0-0eae-4c18-9b4d-ac8faec3f7e6",
            "80c6fa76-2fbf-4613-bd27-031ed5e42a48",
            "0507a30e-c33b-4e91-a19f-ca4de9a508a6",
            "f2c12ecb-3b4b-4341-97ca-29e3abfa5236",
            "889cab31-c0ad-4572-a773-6362a5dc2666",
            "c13c1625-002f-4448-995d-de7885e57d3a",
            "a4c7d90c-08ba-4e3e-af46-8a997729504a",
            "168e7fcc-b1a9-425c-b3ce-77ed87c8582f",
            "39e5b226-f7a6-4590-bf28-3b9de7b753d9",
            "61093c6d-5f88-4dd9-a24a-c1dfd98b52ff",
            "dde15d80-3381-4346-8eb9-868c5148d457",
            "624fa7e6-66ba-420e-9f51-eeeae84acf7e",
            "24fb391c-5030-4b9d-8fa1-de13d8676451",
            "b7bb17d3-53f7-45c5-8396-f6cf55abccb4",
            "a246c828-ea32-42a5-b82c-2ce972b0df61",
            "1a54c767-bb03-4568-b3b6-361a1b816fcb",
            "b7456099-8668-493a-9fe1-3a8fd74fea5d",
            "37a4a5e7-2067-48f8-b574-5e349f469669",
            "48d2a2a1-e337-47ca-866d-c24b7afcec0d",
            "1c92dc2a-2525-4311-a0dc-e87c19a70872",
            "84fb8902-2855-46a3-a21a-d3ce740efb44",
            "46b9dd47-1ebd-4eb1-9ebe-8e3d85dce234",
            "21193e95-b09f-4803-a7db-2d87125a257a",
            "eef8b947-d116-444e-a4e2-96ecc0ec3762",
            "e4e6d086-e9b1-41f6-81d2-c6bf651a96af",
            "c0c6322a-1a8b-4586-b2e6-0ca0a96f76e6",
            "fd058d11-e75d-4d93-a286-00ce0fa91b07",
            "9c457927-ea00-46fd-bc7c-a384d0b9f99b",
            "b1c93e0c-0b16-4551-b8ed-705f5b212f03",
            "d9292661-539d-4601-b427-3cf37e7b7d53",
            "1fbadc13-bf37-48f9-ba01-6276786522ad",
            "04ee1e0b-7fd9-4cf1-8634-207f9d04f4a7",
            "b7fa8c46-bfb9-4bb8-9f0c-f671a19f09f6",
            "44f164aa-2600-4a29-8590-b4bd9e792406",
            "ed86e670-b6c8-420f-aac2-017db65c9704",
            "ed3b5151-1777-4241-b83f-22c046b6137b",
            "2f88ffe1-76e4-43a7-8b3f-543a790d3a6d",
            "cab60798-335a-442c-819c-128ac679360f",
            "23a6ab76-6e57-499f-aa4a-ecc7e414a7d6",
            "d36519d7-084a-410d-bee9-1bcd7dab923e",
            "2a4e4446-be0e-4bf3-8198-772b2967335b",
            "19e6d150-dd8d-4399-9c37-71957d8672ea",
            "d76ccdb6-a250-42f3-bda1-43fa4e6f1861",
            "8d1d1500-6cfc-42a0-91ce-cc8dd2e5d74e",
            "e84fb101-aa7b-4b54-8756-9c428560ac3a",
            "2a69de27-6618-4adb-8e84-c08b337308a3",
            "15898699-6d44-4f06-bc68-4843a03b10f2",
            "aede8a41-64c9-4b9e-99d3-bb3e9f61135b",
            "9ed68864-9a8d-4871-a7e4-f2210546eeac",
            "5e94a0c0-6d0e-4bfd-b9fc-50a69c9f45dc",
            "738d7a32-947e-48f0-a1f6-334e4a45b8d3",
            "e3a98977-44b5-48e7-bb03-6d8eb49439fb",
            "704fd593-acb0-498c-9e78-e426756a6de5",
            "d7759bdb-3973-456e-8483-dda9ae78fe2d",
            "40f6d918-e5f8-4acc-a1c6-184db6379e99",
            "59fb7dc4-6463-46cf-bb87-47e4cc0cf48e",
            "2e4dd39c-4b9b-4ea3-97c5-3348b7cc384f",
            "e3544248-6acc-44e3-9e87-959385ab1ba7",
            "90aa6fd9-5cbf-40fe-ab70-27449c0fd4a0",
            "ad11bc19-5d56-4017-b3c1-145675316462",
            "727308d6-a294-4c03-afe2-964a945a191b",
            "3d93c9c5-f995-4e62-b318-6757d6479e16",
            "492d2921-895c-48f8-9726-30b3100bc346",
            "42e8a52d-98d2-4d82-b8ad-42d85b1b5040",
            "3a9f908e-2697-45ef-8471-2481ba4e59c1",
            "13eb5317-7d55-4232-881a-203508d6a180",
            "834479d3-a7be-4457-afbd-8cf6c273c1d1",
            "1342de8b-186f-47bb-a073-e72d53e9444d",
            "423e19fa-afce-4071-a16e-0297bd6dcc1e",
            "24ff8881-4040-4f63-9459-3e86eba44580",
            "804f0246-4b87-4a9a-b506-8cae2d6df72a",
            "72c717db-b41b-4682-aae2-29007426b61f",
            "412cb36d-2df5-411d-920f-2a3fe619565e",
            "dc19e031-df21-4e80-a834-388a302a3d43",
            "d63a1e71-b702-4c5a-a885-1cf0a2c4cdc1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 141518,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}
{
  "stats": {
    "suites": 1,
    "tests": 107,
    "passes": 34,
    "pending": 0,
    "failures": 73,
    "start": "2023-11-02T11:05:35.212Z",
    "end": "2023-11-02T11:07:26.116Z",
    "duration": 110904,
    "testsRegistered": 107,
    "passPercent": 31.775700934579437,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5993d219-6923-4906-a7fe-30bc9f45bf95",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
          "title": "Botium Test-Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Botium Test-Suite\"",
              "fullTitle": "Botium Test-Suite \"before all\" hook in \"Botium Test-Suite\"",
              "timedOut": false,
              "duration": 168,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.Build()\n  .then((container) => {\n    suite.container = container\n    done()\n  })\n  .catch(done)",
              "err": {},
              "uuid": "0e39520a-1aee-41fe-99a8-db16dfe6dbc4",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Botium Test-Suite\"",
              "fullTitle": "Botium Test-Suite \"before each\" hook in \"Botium Test-Suite\"",
              "timedOut": false,
              "duration": 23,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "suite.container ? suite.container.Start().then(() => done()).catch(done) : done()",
              "err": {},
              "uuid": "5023d7e9-ae55-43f9-a732-b3895f80a5f0",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Botium Test-Suite\"",
              "fullTitle": "Botium Test-Suite \"after all\" hook in \"Botium Test-Suite\"",
              "timedOut": false,
              "duration": 12,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "suite.container ? suite.container.Clean().then(() => done()).catch(done) : done()",
              "err": {},
              "uuid": "e878632e-4e96-40c9-ac15-d3f3ac943623",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Botium Test-Suite\"",
              "fullTitle": "Botium Test-Suite \"after each\" hook in \"Botium Test-Suite\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "suite.container ? suite.container.Stop().then(() => done()).catch(done) : done()",
              "err": {},
              "uuid": "6cfdf867-8215-48ee-9c64-9caa723fd06c",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L01/Insurance - YES-L1",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L01/Insurance - YES-L1",
              "timedOut": false,
              "duration": 1801,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: just going to say hi\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: Insurance policies we provide\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "284eaca3-32f5-46e4-9a88-2cc7b9d99a5e",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L01/Insurance - YES-L2",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L01/Insurance - YES-L2",
              "timedOut": false,
              "duration": 1665,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: just going to say hi\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: What insurance policies do you have?\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "2c4d0b18-f1c5-4da4-b84e-c756bd758061",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L02/Insurance - YES-L1",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L02/Insurance - YES-L1",
              "timedOut": false,
              "duration": 1681,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: heya\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: Insurance policies we provide\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b27c53a0-fc0f-4776-82af-3fb2426493b7",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L02/Insurance - YES-L2",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L02/Insurance - YES-L2",
              "timedOut": false,
              "duration": 1598,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: heya\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: What insurance policies do you have?\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "263c30df-51d6-4475-af4d-8322f421936d",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L03/Insurance - YES-L1",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L03/Insurance - YES-L1",
              "timedOut": false,
              "duration": 1221,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello hi\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: Insurance policies we provide\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "9ebe09a1-2c0c-4ffb-a5a6-e868795493c2",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L03/Insurance - YES-L2",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L03/Insurance - YES-L2",
              "timedOut": false,
              "duration": 1310,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello hi\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: What insurance policies do you have?\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "1ca279ff-fd64-4f2b-a0b0-24488c585106",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L04/Insurance - YES-L1",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L04/Insurance - YES-L1",
              "timedOut": false,
              "duration": 1016,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: howdy\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: Insurance policies we provide\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "f322b6b3-a654-4e9d-8d9a-dd1badfefbb3",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L04/Insurance - YES-L2",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L04/Insurance - YES-L2",
              "timedOut": false,
              "duration": 868,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: howdy\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: What insurance policies do you have?\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "f96080e6-98da-43ca-895f-b3ff4fb21ec3",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L05/Insurance - YES-L1",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L05/Insurance - YES-L1",
              "timedOut": false,
              "duration": 1139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hey there\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: Insurance policies we provide\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "d7545196-6a6f-45f0-8365-e14526bb3944",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L05/Insurance - YES-L2",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L05/Insurance - YES-L2",
              "timedOut": false,
              "duration": 1065,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hey there\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: What insurance policies do you have?\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "c5011391-716f-4a41-8162-e8ac4286f153",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L06/Insurance - YES-L1",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L06/Insurance - YES-L1",
              "timedOut": false,
              "duration": 1011,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi there\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: Insurance policies we provide\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b1252be3-5ad6-4b5c-9d21-0b74ee968bf3",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L06/Insurance - YES-L2",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L06/Insurance - YES-L2",
              "timedOut": false,
              "duration": 1279,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi there\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: What insurance policies do you have?\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "e1240145-5ccb-42d3-9931-166c1ce6abc3",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L07/Insurance - YES-L1",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L07/Insurance - YES-L1",
              "timedOut": false,
              "duration": 1539,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: greetings\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: Insurance policies we provide\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "5b9277bf-7f23-4464-8c20-addb12d83100",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L07/Insurance - YES-L2",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L07/Insurance - YES-L2",
              "timedOut": false,
              "duration": 895,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: greetings\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: What insurance policies do you have?\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b87207a8-c7af-412b-beaf-fb2f4da76352",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L08/Insurance - YES-L1",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L08/Insurance - YES-L1",
              "timedOut": false,
              "duration": 1086,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hey\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: Insurance policies we provide\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "7aea8e6a-cc00-4669-8bc9-5a95d1ea8f77",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L08/Insurance - YES-L2",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L08/Insurance - YES-L2",
              "timedOut": false,
              "duration": 1003,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hey\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: What insurance policies do you have?\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "954e865b-aa55-4c2f-af9b-bfccf6329c02",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L09/Insurance - YES-L1",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L09/Insurance - YES-L1",
              "timedOut": false,
              "duration": 1073,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: long time no see\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: Insurance policies we provide\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "868eb80d-be24-4ffd-8b86-0d79f1215a29",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L09/Insurance - YES-L2",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L09/Insurance - YES-L2",
              "timedOut": false,
              "duration": 1021,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: long time no see\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: What insurance policies do you have?\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "3677e7c1-826a-478b-84ee-50cee5a2ffb0",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L10/Insurance - YES-L1",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L10/Insurance - YES-L1",
              "timedOut": false,
              "duration": 1029,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: Insurance policies we provide\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "7767ae3a-5a4b-4508-bd17-89799576c1bb",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L10/Insurance - YES-L2",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L10/Insurance - YES-L2",
              "timedOut": false,
              "duration": 770,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: What insurance policies do you have?\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "fbed5698-e3d8-4738-bbbe-10e5455f0e63",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L11/Insurance - YES-L1",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L11/Insurance - YES-L1",
              "timedOut": false,
              "duration": 1096,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: lovely day isn't it\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: Insurance policies we provide\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "3a659fac-3cc6-4310-82c6-6d9ba96dc974",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L11/Insurance - YES-L2",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L11/Insurance - YES-L2",
              "timedOut": false,
              "duration": 1206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: lovely day isn't it\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: What insurance policies do you have?\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "8b30da5f-7c1e-4259-b860-516ee39b3ab0",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L12/Insurance - YES-L1",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L12/Insurance - YES-L1",
              "timedOut": false,
              "duration": 1130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: I greet you\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: Insurance policies we provide\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "41b367f4-ad77-48bc-9b03-3dcd8c99697e",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L12/Insurance - YES-L2",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L12/Insurance - YES-L2",
              "timedOut": false,
              "duration": 1143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: I greet you\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: What insurance policies do you have?\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "7c89fa0f-225d-447b-ad57-3e36c015e2cf",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L13/Insurance - YES-L1",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L13/Insurance - YES-L1",
              "timedOut": false,
              "duration": 1071,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello again\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: Insurance policies we provide\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "6ab5492f-8b6c-43ef-98af-8dcda9d4ccd7",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L13/Insurance - YES-L2",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L13/Insurance - YES-L2",
              "timedOut": false,
              "duration": 996,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello again\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: What insurance policies do you have?\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "05109953-65ea-4a23-9b9a-f2edbeaa1e09",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L14/Insurance - YES-L1",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L14/Insurance - YES-L1",
              "timedOut": false,
              "duration": 942,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: Insurance policies we provide\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "2e2c6500-d069-4141-8d3d-4dfb4cd29e8d",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L14/Insurance - YES-L2",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L14/Insurance - YES-L2",
              "timedOut": false,
              "duration": 932,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hi\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: What insurance policies do you have?\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "2a273e7e-d059-497e-a05c-cabf87d77013",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L15/Insurance - YES-L1",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L15/Insurance - YES-L1",
              "timedOut": false,
              "duration": 902,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello there\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: Insurance policies we provide\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "f9064e60-1bd9-4da5-b586-ec559a1c0a4f",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L15/Insurance - YES-L2",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L15/Insurance - YES-L2",
              "timedOut": false,
              "duration": 760,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: hello there\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: What insurance policies do you have?\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "e270f8bf-c3e4-45d3-9855-f38d45f4c19e",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L16/Insurance - YES-L1",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L16/Insurance - YES-L1",
              "timedOut": false,
              "duration": 1332,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: a good day\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: Insurance policies we provide\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "6325c5eb-300d-4c56-b267-0383e1743665",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default Welcome Intent - Insurance - YES/Default Welcome Intent-L16/Insurance - YES-L2",
              "fullTitle": "Botium Test-Suite Default Welcome Intent - Insurance - YES/Default Welcome Intent-L16/Insurance - YES-L2",
              "timedOut": false,
              "duration": 982,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: a good day\\n#bot: Hey👋 Thank you for showing interest in our insurance 😍\\n#me: What insurance policies do you have?\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "0f4f84fb-3713-4d23-8920-e6d30b2a731f",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Housing Society/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Housing Society-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Housing Society/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Housing Society-L1",
              "timedOut": false,
              "duration": 999,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: ok\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Housing Society/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Housing Society-L1/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Housing Society/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Housing Society-L1/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "ab2ff8c1-48cb-4a6c-96a3-9b018b7be432",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Housing Society/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Housing Society-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Housing Society/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Housing Society-L1",
              "timedOut": false,
              "duration": 1111,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: sure\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Housing Society/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Housing Society-L1/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Housing Society/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Housing Society-L1/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "19381ed8-6604-453e-861b-bbd3b552cf12",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Housing Society/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Housing Society-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Housing Society/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Housing Society-L1",
              "timedOut": false,
              "duration": 1019,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: okay\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Housing Society/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Housing Society-L1/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Housing Society/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Housing Society-L1/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "cbd37396-629a-4f9c-b2b7-a74fbac18fe0",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Housing Society/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Housing Society-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Housing Society/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Housing Society-L1",
              "timedOut": false,
              "duration": 928,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Home Insurance - Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Housing Society/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Housing Society-L1/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Housing Society/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Housing Society-L1/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "e073f00e-4de9-4aa6-8e53-381acb380183",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Housing Society/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Housing Society-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Housing Society/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Housing Society-L1",
              "timedOut": false,
              "duration": 881,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Housing Society/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Housing Society-L1/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Housing Society/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Housing Society-L1/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "e31a7ead-cf94-4081-b010-0b44769e9636",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - No-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - No-L1",
              "timedOut": false,
              "duration": 1031,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: ok\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - No-L1/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - No-L1/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "8cbf8dfa-66ab-42a3-87b6-7f2654171f15",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - No-L2",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - No-L2",
              "timedOut": false,
              "duration": 706,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: ok\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - No-L2/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - No-L2/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "3f386ed2-3bed-416b-8aff-5cbfab5437c5",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - No-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - No-L1",
              "timedOut": false,
              "duration": 865,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: sure\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - No-L1/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - No-L1/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "8d0a605c-705f-4302-956c-1f0e4555c1d0",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - No-L2",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - No-L2",
              "timedOut": false,
              "duration": 912,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: sure\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - No-L2/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - No-L2/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "f44c675b-29c0-4bf7-b671-e76c784d4fae",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - No-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - No-L1",
              "timedOut": false,
              "duration": 918,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: okay\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - No-L1/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - No-L1/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "71572ed2-b60a-482c-9362-92d94f606a87",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - No-L2",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - No-L2",
              "timedOut": false,
              "duration": 961,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: okay\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - No-L2/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - No-L2/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "41c3050f-4945-474e-b674-5e2b62b51828",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - No-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - No-L1",
              "timedOut": false,
              "duration": 846,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Home Insurance - Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - No-L1/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - No-L1/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "6c6af306-694d-430f-8348-4ec7e562124f",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - No-L2",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - No-L2",
              "timedOut": false,
              "duration": 1075,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Home Insurance - Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - No-L2/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - No-L2/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "9d35e992-9db1-461f-99a8-da4a0871d9c8",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - No-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - No-L1",
              "timedOut": false,
              "duration": 1161,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - No-L1/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - No-L1/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "dc427a95-6b4d-46b5-802f-c6bdf8afe263",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - No-L2",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - No-L2",
              "timedOut": false,
              "duration": 960,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - No-L2/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - No/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - No-L2/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "e45cfc55-1a73-4762-b7f6-671afb2fc6fc",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L1",
              "timedOut": false,
              "duration": 925,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: ok\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L1/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L1/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "bb41cc6c-7f23-43f4-a0be-dae0142eb12f",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L2",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L2",
              "timedOut": false,
              "duration": 904,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: ok\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L2/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L2/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "767cece9-91d4-4f71-a359-22459dacd297",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L3",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L3",
              "timedOut": false,
              "duration": 792,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: ok\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L3/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L3/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "106d3f6c-8af6-47b8-9bf0-88c0431b4444",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L4",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L4",
              "timedOut": false,
              "duration": 954,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: ok\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L4/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L4/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "2c5fbfe8-3dbb-4d87-84cb-16c547587164",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L1",
              "timedOut": false,
              "duration": 820,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: sure\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L1/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L1/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "3df0352d-3aea-440b-bcc5-4911223eca78",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L2",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L2",
              "timedOut": false,
              "duration": 785,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: sure\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L2/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L2/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "f9639310-b920-4ca1-afcf-1f9c345db215",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L3",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L3",
              "timedOut": false,
              "duration": 1151,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: sure\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L3/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L3/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "63b35c3c-d5a3-452a-a632-8f0af0cb580c",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L4",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L4",
              "timedOut": false,
              "duration": 849,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: sure\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L4/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L4/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "da442b9e-7637-4976-8d74-d97a219a81fa",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L1",
              "timedOut": false,
              "duration": 874,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: okay\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L1/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L1/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "72a99f71-e0c1-4d9c-a5d7-70690383ee07",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L2",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L2",
              "timedOut": false,
              "duration": 1028,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: okay\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L2/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L2/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "e9bde100-3bfc-4c0d-96c4-f147471b15f0",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L3",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L3",
              "timedOut": false,
              "duration": 1122,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: okay\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L3/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L3/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "cc562a1e-4b66-4f49-8dbe-e0dd41d28e36",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L4",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L4",
              "timedOut": false,
              "duration": 854,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: okay\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L4/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L4/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "f05c501f-2285-4cd3-b960-ccee0913a85e",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L1",
              "timedOut": false,
              "duration": 956,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Home Insurance - Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L1/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L1/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "ca4dee04-1e17-4622-9ce1-055c207bd79e",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L2",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L2",
              "timedOut": false,
              "duration": 904,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Home Insurance - Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L2/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L2/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "2709d413-7f26-4c2b-8dc1-2de34a9cd204",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L3",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L3",
              "timedOut": false,
              "duration": 850,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Home Insurance - Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L3/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L3/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "c2fc2a1e-9680-429d-b834-795a3bfdc305",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L4",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L4",
              "timedOut": false,
              "duration": 891,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Home Insurance - Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L4/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L4/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "d14bba06-77f9-43f7-ac82-06e7d5fe4b23",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L1",
              "timedOut": false,
              "duration": 942,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L1/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L1/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "2bb6de39-f0f8-4fc4-b9a4-eaa07d82ea0f",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L2",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L2",
              "timedOut": false,
              "duration": 1134,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L2/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L2/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "83c5c4e1-0725-46ec-8efc-35d8d4e006be",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L3",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L3",
              "timedOut": false,
              "duration": 977,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L3/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L3/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "8aa32c31-1dc3-4db7-be6a-55a464d7bcc1",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L4",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L4",
              "timedOut": false,
              "duration": 910,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L4/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Owners - Home Insurance - Owners - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Owners-L1/Home Insurance - Owners - Yes-L4/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "eb8e4e29-4fbe-4eee-9287-f202978ba95b",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L1",
              "timedOut": false,
              "duration": 810,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: ok\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L1/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L1/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "050b6a6f-d4de-48a2-9d59-632517cc2c92",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L2",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L2",
              "timedOut": false,
              "duration": 898,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: ok\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L2/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L2/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "4c07b684-2e88-42f8-8df0-f905462e1921",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L1",
              "timedOut": false,
              "duration": 989,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: sure\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L1/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L1/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "544608ef-8ee5-4fe0-9872-5c5df61008d3",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L2",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L2",
              "timedOut": false,
              "duration": 831,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: sure\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L2/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L2/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "74c26a5c-2e3c-412b-8be5-5a580f31352d",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L1",
              "timedOut": false,
              "duration": 1020,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: okay\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L1/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L1/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "93ed545b-3b11-460f-ba75-005635eff981",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L2",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L2",
              "timedOut": false,
              "duration": 1035,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: okay\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L2/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L2/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "a7404f70-2072-455b-9d2e-9157c865508a",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L1",
              "timedOut": false,
              "duration": 823,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Home Insurance - Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L1/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L1/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "16c00f65-2b7d-4b42-b9c1-d76d85e67dac",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L2",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L2",
              "timedOut": false,
              "duration": 894,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Home Insurance - Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L2/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L2/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "044464db-dd41-4c96-8157-c9a2bbebfc2c",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L1",
              "timedOut": false,
              "duration": 947,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L1/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L1/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "46871185-d4b9-45dc-b24d-cdc0bf40a0cd",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L2",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L2",
              "timedOut": false,
              "duration": 857,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L2/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - No/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - No-L2/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "9c510127-a44a-4ac9-a2e4-a31397158fee",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L1",
              "timedOut": false,
              "duration": 817,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: ok\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L1/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L1/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "749fce57-dd26-4877-8727-c28929a079ac",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L2",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L2",
              "timedOut": false,
              "duration": 662,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: ok\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L2/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L2/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "b9d58a16-6add-40dc-9d69-b20453d96189",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L3",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L3",
              "timedOut": false,
              "duration": 914,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: ok\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L3/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L3/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "0f650130-7f50-4c01-9452-b4bba31e7a34",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L4",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L4",
              "timedOut": false,
              "duration": 937,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: ok\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L4/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L4/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "d57b4d9f-aa29-4840-bc46-02e60c695fb2",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L5",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L5",
              "timedOut": false,
              "duration": 829,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: ok\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L5/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L1/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L5/Line 13: Bot response (on Line 10: #me - ok) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: ok\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: ok\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "75c3d52d-ae34-43fe-aabf-1d2b8b9009b2",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L1",
              "timedOut": false,
              "duration": 909,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: sure\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L1/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L1/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "d13023ff-228f-4893-86fc-aa4cd6172fb9",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L2",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L2",
              "timedOut": false,
              "duration": 917,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: sure\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L2/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L2/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "ccb14ff6-1d84-4aea-90ef-86507ffb6cea",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L3",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L3",
              "timedOut": false,
              "duration": 898,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: sure\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L3/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L3/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "f6128532-11d6-4193-bd8d-2aa401dea1da",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L4",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L4",
              "timedOut": false,
              "duration": 842,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: sure\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L4/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L4/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "d7413a01-442f-45a5-880a-5329eb9158f6",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L5",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L5",
              "timedOut": false,
              "duration": 783,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: sure\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L5/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L2/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L5/Line 13: Bot response (on Line 10: #me - sure) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: sure\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: sure\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "10b4ddc9-b359-4bcc-b7e9-6936107626a4",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L1",
              "timedOut": false,
              "duration": 886,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: okay\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L1/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L1/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "b51fd01f-8076-4a27-bf05-877de545c6d2",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L2",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L2",
              "timedOut": false,
              "duration": 1014,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: okay\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L2/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L2/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "7831f7a5-e5b9-484e-bac8-c41ed0012af9",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L3",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L3",
              "timedOut": false,
              "duration": 991,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: okay\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L3/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L3/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "86f7e334-3a01-4777-bd82-37453e77e88f",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L4",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L4",
              "timedOut": false,
              "duration": 1109,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: okay\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L4/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L4/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "b5f03623-326d-4133-9cf9-713d92399d0f",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L5",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L5",
              "timedOut": false,
              "duration": 884,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: okay\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L5/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L3/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L5/Line 13: Bot response (on Line 10: #me - okay) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: okay\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: okay\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "0272998c-2a0b-4b24-aaf2-360e0f38c88d",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L1",
              "timedOut": false,
              "duration": 945,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Home Insurance - Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L1/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L1/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "80c231a0-eb5b-45d7-a57c-dfa4b40fd268",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L2",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L2",
              "timedOut": false,
              "duration": 847,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Home Insurance - Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L2/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L2/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "bfffb005-7307-46d3-b6e7-208332ce3f26",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L3",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L3",
              "timedOut": false,
              "duration": 917,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Home Insurance - Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L3/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L3/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "b881f167-6af9-4865-9872-d768e357011d",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L4",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L4",
              "timedOut": false,
              "duration": 869,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Home Insurance - Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L4/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L4/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "4a873fa6-c690-449f-addf-20a890c8a44d",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L5",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L5",
              "timedOut": false,
              "duration": 948,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Home Insurance - Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L5/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L4/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L5/Line 13: Bot response (on Line 10: #me - Home Insurance - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Home Insurance - Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Home Insurance - Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "967a97df-89f2-4653-a0e2-bb6bb9f7092f",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L1",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L1",
              "timedOut": false,
              "duration": 814,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L1/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L1/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "af022c3e-23c2-4750-8857-2eec0a5351c8",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L2",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L2",
              "timedOut": false,
              "duration": 884,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L2/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L2/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "4818d8b6-82c1-4039-8dc0-e466340ff824",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L3",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L3",
              "timedOut": false,
              "duration": 1047,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L3/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L3/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "08749907-46a8-4ef3-a922-8c686898a318",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L4",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L4",
              "timedOut": false,
              "duration": 871,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L4/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L4/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "0750bf91-a263-46ba-938a-d3606b7c2843",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L5",
              "fullTitle": "Botium Test-Suite Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L5",
              "timedOut": false,
              "duration": 942,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Home Insurance\\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\\n#me: Plan Details\\n#bot: ⭐Benefits and Features of 🏠Home Insurance\\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\\n\\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L5/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.",
                "estack": "Error: Home Insurance - Home Insurance - Plan Details - Home Insurance - Tenants - Home Insurance - Tenants - Yes/Home Insurance-L1/Home Insurance - Plan Details-L5/Home Insurance - Tenants-L1/Home Insurance - Tenants - Yes-L5/Line 13: Bot response (on Line 10: #me - Plan Details) \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\" expected to match \"Choose any of the Home insurance plan 👇🏼\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"Choose any of the Home insurance plan 👇🏼\"]  - Actual: \"⭐Benefits and Features of 🏠Home Insurance ✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events ✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\"\r\nINPUT: Plan Details\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Home Insurance\r\n#bot: 🏠Home insurance covers the structure of house and the contents which include prized possessions against damage from natural calamities like floods, earthquake, storm and man made events like riots, arson etc.\r\n#me: Plan Details\r\n#bot: ⭐Benefits and Features of 🏠Home Insurance\n✔️Complete coverage for any damage to your home or it's contents from natural calamities and man made events\n\n✔️Benefits like round the clock customer service, immediate access to the insurance experts and quick customer service.\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "72d50e78-9874-482b-b6aa-401af8342bbd",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Life Insurance - Life Insurance - Plan details - Life Insurance - Critical Illness benefit/Life Insurance-L1/Life Insurance - Plan details-L1/Life Insurance - Critical Illness benefit-L1",
              "fullTitle": "Botium Test-Suite Life Insurance - Life Insurance - Plan details - Life Insurance - Critical Illness benefit/Life Insurance-L1/Life Insurance - Plan details-L1/Life Insurance - Critical Illness benefit-L1",
              "timedOut": false,
              "duration": 1712,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Life Insurance\\n#bot: ✔️Who needs it: Those with dependents\\n\\n✔️What it is: \\n- In the event of death, a life insurance policy pays a beneficiary an agreed-upon amount of money to cover the expenses left by the deceased\\n\\n- A beneficiary is a person or entity named in a policy who receives benefits, such as a spouse\\n#me: Life Insurance - Plan details\\n#bot: ✔️Premium: Rs. 1000 paid annually\\n✔️Premium Payment Term: 6 Years (Regular)\\n✔️Sum Assured: Rs 2,50,000\\n✔️Plan Option: Daily hospital cash, surgical & critical illness\\n#me: Critical illness benefit\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Life Insurance - Life Insurance - Plan details - Life Insurance - Critical Illness benefit/Life Insurance-L1/Life Insurance - Plan details-L1/Life Insurance - Critical Illness benefit-L1/Line 20: Bot response (on Line 17: #me - Critical illness benefit) <no response> expected to match one of \"✔️Critical Illness Insurance provides coverage against specific life threatening diseases\", \"✔️Treating such critical illnesses may require multiple visits to the hospital over a long period of time\", \"✔️In addition to the hospitalization cost, there will be other costs like doctor visits, medical expenses, etc\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"✔️Critical Illness Insurance provides coverage against specific life threatening diseases\",\"✔️Treating such critical illnesses may require multiple visits to the hospital over a long period of time\",\"✔️In addition to the hospitalization cost, there will be other costs like doctor visits, medical expenses, etc\"]  - Actual: empty\r\nINPUT: Critical illness benefit\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Life Insurance\r\n#bot: ✔️Who needs it: Those with dependents\n\n✔️What it is: \n- In the event of death, a life insurance policy pays a beneficiary an agreed-upon amount of money to cover the expenses left by the deceased\n\n- A beneficiary is a person or entity named in a policy who receives benefits, such as a spouse\r\n#me: Life Insurance - Plan details\r\n#bot: ✔️Premium: Rs. 1000 paid annually\n✔️Premium Payment Term: 6 Years (Regular)\n✔️Sum Assured: Rs 2,50,000\n✔️Plan Option: Daily hospital cash, surgical & critical illness\r\n#me: Critical illness benefit\r\n#bot:",
                "estack": "Error: Life Insurance - Life Insurance - Plan details - Life Insurance - Critical Illness benefit/Life Insurance-L1/Life Insurance - Plan details-L1/Life Insurance - Critical Illness benefit-L1/Line 20: Bot response (on Line 17: #me - Critical illness benefit) <no response> expected to match one of \"✔️Critical Illness Insurance provides coverage against specific life threatening diseases\", \"✔️Treating such critical illnesses may require multiple visits to the hospital over a long period of time\", \"✔️In addition to the hospitalization cost, there will be other costs like doctor visits, medical expenses, etc\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"✔️Critical Illness Insurance provides coverage against specific life threatening diseases\",\"✔️Treating such critical illnesses may require multiple visits to the hospital over a long period of time\",\"✔️In addition to the hospitalization cost, there will be other costs like doctor visits, medical expenses, etc\"]  - Actual: empty\r\nINPUT: Critical illness benefit\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Life Insurance\r\n#bot: ✔️Who needs it: Those with dependents\n\n✔️What it is: \n- In the event of death, a life insurance policy pays a beneficiary an agreed-upon amount of money to cover the expenses left by the deceased\n\n- A beneficiary is a person or entity named in a policy who receives benefits, such as a spouse\r\n#me: Life Insurance - Plan details\r\n#bot: ✔️Premium: Rs. 1000 paid annually\n✔️Premium Payment Term: 6 Years (Regular)\n✔️Sum Assured: Rs 2,50,000\n✔️Plan Option: Daily hospital cash, surgical & critical illness\r\n#me: Critical illness benefit\r\n#bot:\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "addd68bd-53cb-4b01-a75f-a8670b7f0b8f",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Life Insurance - Life Insurance - Plan details - Life Insurance - Daily Hospital Benefit/Life Insurance-L1/Life Insurance - Plan details-L1/Life Insurance - Daily Hospital Benefit-L1",
              "fullTitle": "Botium Test-Suite Life Insurance - Life Insurance - Plan details - Life Insurance - Daily Hospital Benefit/Life Insurance-L1/Life Insurance - Plan details-L1/Life Insurance - Daily Hospital Benefit-L1",
              "timedOut": false,
              "duration": 1527,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Life Insurance\\n#bot: ✔️Who needs it: Those with dependents\\n\\n✔️What it is: \\n- In the event of death, a life insurance policy pays a beneficiary an agreed-upon amount of money to cover the expenses left by the deceased\\n\\n- A beneficiary is a person or entity named in a policy who receives benefits, such as a spouse\\n#me: Life Insurance - Plan details\\n#bot: ✔️Premium: Rs. 1000 paid annually\\n✔️Premium Payment Term: 6 Years (Regular)\\n✔️Sum Assured: Rs 2,50,000\\n✔️Plan Option: Daily hospital cash, surgical & critical illness\\n#me: Daily Hospital Benefit\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Life Insurance - Life Insurance - Plan details - Life Insurance - Daily Hospital Benefit/Life Insurance-L1/Life Insurance - Plan details-L1/Life Insurance - Daily Hospital Benefit-L1/Line 20: Bot response (on Line 17: #me - Daily Hospital Benefit) <no response> expected to match one of \"✔️Daily hospital benefit provides a sum amount daily in case of hospitalization and this amount can be used per the insured’s need\", \"✔️The money can be used for meeting additional expenses that are not covered by health insurance or for even compensating the loss of income during the period of hospitalization\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"✔️Daily hospital benefit provides a sum amount daily in case of hospitalization and this amount can be used per the insured’s need\",\"✔️The money can be used for meeting additional expenses that are not covered by health insurance or for even compensating the loss of income during the period of hospitalization\"]  - Actual: empty\r\nINPUT: Daily Hospital Benefit\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Life Insurance\r\n#bot: ✔️Who needs it: Those with dependents\n\n✔️What it is: \n- In the event of death, a life insurance policy pays a beneficiary an agreed-upon amount of money to cover the expenses left by the deceased\n\n- A beneficiary is a person or entity named in a policy who receives benefits, such as a spouse\r\n#me: Life Insurance - Plan details\r\n#bot: ✔️Premium: Rs. 1000 paid annually\n✔️Premium Payment Term: 6 Years (Regular)\n✔️Sum Assured: Rs 2,50,000\n✔️Plan Option: Daily hospital cash, surgical & critical illness\r\n#me: Daily Hospital Benefit\r\n#bot:",
                "estack": "Error: Life Insurance - Life Insurance - Plan details - Life Insurance - Daily Hospital Benefit/Life Insurance-L1/Life Insurance - Plan details-L1/Life Insurance - Daily Hospital Benefit-L1/Line 20: Bot response (on Line 17: #me - Daily Hospital Benefit) <no response> expected to match one of \"✔️Daily hospital benefit provides a sum amount daily in case of hospitalization and this amount can be used per the insured’s need\", \"✔️The money can be used for meeting additional expenses that are not covered by health insurance or for even compensating the loss of income during the period of hospitalization\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"✔️Daily hospital benefit provides a sum amount daily in case of hospitalization and this amount can be used per the insured’s need\",\"✔️The money can be used for meeting additional expenses that are not covered by health insurance or for even compensating the loss of income during the period of hospitalization\"]  - Actual: empty\r\nINPUT: Daily Hospital Benefit\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Life Insurance\r\n#bot: ✔️Who needs it: Those with dependents\n\n✔️What it is: \n- In the event of death, a life insurance policy pays a beneficiary an agreed-upon amount of money to cover the expenses left by the deceased\n\n- A beneficiary is a person or entity named in a policy who receives benefits, such as a spouse\r\n#me: Life Insurance - Plan details\r\n#bot: ✔️Premium: Rs. 1000 paid annually\n✔️Premium Payment Term: 6 Years (Regular)\n✔️Sum Assured: Rs 2,50,000\n✔️Plan Option: Daily hospital cash, surgical & critical illness\r\n#me: Daily Hospital Benefit\r\n#bot:\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "e6871c91-ca75-446f-a965-d97097d5172b",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Life Insurance - Life Insurance - Plan details - Life Insurance - Surgical Benefit/Life Insurance-L1/Life Insurance - Plan details-L1/Life Insurance - Surgical Benefit-L1",
              "fullTitle": "Botium Test-Suite Life Insurance - Life Insurance - Plan details - Life Insurance - Surgical Benefit/Life Insurance-L1/Life Insurance - Plan details-L1/Life Insurance - Surgical Benefit-L1",
              "timedOut": false,
              "duration": 1289,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Life Insurance\\n#bot: ✔️Who needs it: Those with dependents\\n\\n✔️What it is: \\n- In the event of death, a life insurance policy pays a beneficiary an agreed-upon amount of money to cover the expenses left by the deceased\\n\\n- A beneficiary is a person or entity named in a policy who receives benefits, such as a spouse\\n#me: Life Insurance - Plan details\\n#bot: ✔️Premium: Rs. 1000 paid annually\\n✔️Premium Payment Term: 6 Years (Regular)\\n✔️Sum Assured: Rs 2,50,000\\n✔️Plan Option: Daily hospital cash, surgical & critical illness\\n#me: Surgical Benefit\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {
                "message": "Error: Life Insurance - Life Insurance - Plan details - Life Insurance - Surgical Benefit/Life Insurance-L1/Life Insurance - Plan details-L1/Life Insurance - Surgical Benefit-L1/Line 20: Bot response (on Line 17: #me - Surgical Benefit) <no response> expected to match one of \"✔️Illness or accidental injuries resulting in the hospitalization can bring in some serious financial problems for any family\", \"✔️To provide you with financial assistance in such circumstances we provide Surgical Protection Insurance\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"✔️Illness or accidental injuries resulting in the hospitalization can bring in some serious financial problems for any family\",\"✔️To provide you with financial assistance in such circumstances we provide Surgical Protection Insurance\"]  - Actual: empty\r\nINPUT: Surgical Benefit\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Life Insurance\r\n#bot: ✔️Who needs it: Those with dependents\n\n✔️What it is: \n- In the event of death, a life insurance policy pays a beneficiary an agreed-upon amount of money to cover the expenses left by the deceased\n\n- A beneficiary is a person or entity named in a policy who receives benefits, such as a spouse\r\n#me: Life Insurance - Plan details\r\n#bot: ✔️Premium: Rs. 1000 paid annually\n✔️Premium Payment Term: 6 Years (Regular)\n✔️Sum Assured: Rs 2,50,000\n✔️Plan Option: Daily hospital cash, surgical & critical illness\r\n#me: Surgical Benefit\r\n#bot:",
                "estack": "Error: Life Insurance - Life Insurance - Plan details - Life Insurance - Surgical Benefit/Life Insurance-L1/Life Insurance - Plan details-L1/Life Insurance - Surgical Benefit-L1/Line 20: Bot response (on Line 17: #me - Surgical Benefit) <no response> expected to match one of \"✔️Illness or accidental injuries resulting in the hospitalization can bring in some serious financial problems for any family\", \"✔️To provide you with financial assistance in such circumstances we provide Surgical Protection Insurance\"\r\n########################################\r\nASSERTION FAILED in TextMatchAsserter - Expected: [\"✔️Illness or accidental injuries resulting in the hospitalization can bring in some serious financial problems for any family\",\"✔️To provide you with financial assistance in such circumstances we provide Surgical Protection Insurance\"]  - Actual: empty\r\nINPUT: Surgical Benefit\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Life Insurance\r\n#bot: ✔️Who needs it: Those with dependents\n\n✔️What it is: \n- In the event of death, a life insurance policy pays a beneficiary an agreed-upon amount of money to cover the expenses left by the deceased\n\n- A beneficiary is a person or entity named in a policy who receives benefits, such as a spouse\r\n#me: Life Insurance - Plan details\r\n#bot: ✔️Premium: Rs. 1000 paid annually\n✔️Premium Payment Term: 6 Years (Regular)\n✔️Sum Assured: Rs 2,50,000\n✔️Plan Option: Daily hospital cash, surgical & critical illness\r\n#me: Surgical Benefit\r\n#bot:\n    at wrapBotiumError (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:76:12)\n    at finish (C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:205:24)\n    at C:\\Users\\Kvothe\\AppData\\Roaming\\npm\\node_modules\\botium-cli\\src\\run\\index.js:218:11",
                "diff": null
              },
              "uuid": "d7da1815-5728-4d9e-89fe-427073918a49",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Main Menu/Main Menu-L1",
              "fullTitle": "Botium Test-Suite Main Menu/Main Menu-L1",
              "timedOut": false,
              "duration": 607,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Main Menu\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "b171c89f-19a8-462c-8e43-02e086ff9d10",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Vehicle Insurance - Vehicle Insurance - Plan Details/Vehicle Insurance-L1/Vehicle Insurance - Plan Details-L1",
              "fullTitle": "Botium Test-Suite Vehicle Insurance - Vehicle Insurance - Plan Details/Vehicle Insurance-L1/Vehicle Insurance - Plan Details-L1",
              "timedOut": false,
              "duration": 943,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"Conversation Log\",\n  \"value\": \"#me: Vehicle Insurance\\n#bot: Motor insurance policy covers the policyholder in case of financial losses, resulting from an accident or other damages sustained by the insured vehicle. \\n\\nWhat's included?\\n✔️ Accidents, Personal Accident Cover\\n✔️ Fire & Explosion\\n✔️ Theft\\n✔️ Calamities\\n\\nWhat’s not included?\\n✔️ Depreciation\\n✔️ Electrical & Mechanical Breakdown\\n✔️ Illegal Driving\\n#me: Vehicle Insurance - Plan Details\\n#bot:\"\n}",
              "code": "debug('running testcase ' + convo.header.name)\nconst attachmentsLog = []\nconst listenerMe = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerBot = (container, msg) => {\n  if (msg.attachments) attachmentsLog.push(...msg.attachments)\n}\nconst listenerAttachments = (container, attachment) => {\n  attachmentsLog.push(attachment)\n}\ndriver.on('MESSAGE_SENTTOBOT', listenerMe)\ndriver.on('MESSAGE_RECEIVEDFROMBOT', listenerBot)\ndriver.on('MESSAGE_ATTACHMENT', listenerAttachments)\nconst finish = (transcript, err) => {\n  if (transcript) {\n    addContext(runner, { title: 'Conversation Log', value: transcript.prettifyActual() })\n  }\n  driver.eventEmitter.removeListener('MESSAGE_SENTTOBOT', listenerMe)\n  driver.eventEmitter.removeListener('MESSAGE_RECEIVEDFROMBOT', listenerBot)\n  driver.eventEmitter.removeListener('MESSAGE_ATTACHMENT', listenerAttachments)\n  if (argv.attachments && attachmentsLog.length > 0) {\n    debug(`Found ${attachmentsLog.length} attachments, saving to folder ${argv.attachments}`)\n    attachmentsLog.forEach((a, i) => {\n      const filename = slug(convo.header.name) + '_' + i + (a.name ? '_' + slug(a.name) : '') + (a.mimeType ? '.' + mime.extension(a.mimeType) : '')\n      const outputTo = path.join(argv.attachments, filename)\n      try {\n        fs.writeFileSync(outputTo, Buffer.from(a.base64, 'base64'))\n      } catch (err) {\n        debug(`Failed to write attachment to ${outputTo}: ${err.message || util.inspect(err)}`)\n      }\n    })\n  }\n  if (err) {\n    testcaseDone(wrapBotiumError(err))\n  } else {\n    testcaseDone()\n  }\n}\nconvo.Run(suite.container)\n  .then((transcript) => {\n    debug(convo.header.name + ' ready, calling done function.')\n    finish(transcript)\n  })\n  .catch((err) => {\n    debug(convo.header.name + ' failed: ' + util.inspect(err))\n    finish(err.transcript, err)\n  })",
              "err": {},
              "uuid": "bb6cdf6d-e348-495a-9886-8d76483fa8ad",
              "parentUUID": "f3d0474f-b2c1-4e18-9226-124d0d4b776c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "284eaca3-32f5-46e4-9a88-2cc7b9d99a5e",
            "2c4d0b18-f1c5-4da4-b84e-c756bd758061",
            "b27c53a0-fc0f-4776-82af-3fb2426493b7",
            "263c30df-51d6-4475-af4d-8322f421936d",
            "9ebe09a1-2c0c-4ffb-a5a6-e868795493c2",
            "1ca279ff-fd64-4f2b-a0b0-24488c585106",
            "f322b6b3-a654-4e9d-8d9a-dd1badfefbb3",
            "f96080e6-98da-43ca-895f-b3ff4fb21ec3",
            "d7545196-6a6f-45f0-8365-e14526bb3944",
            "c5011391-716f-4a41-8162-e8ac4286f153",
            "b1252be3-5ad6-4b5c-9d21-0b74ee968bf3",
            "e1240145-5ccb-42d3-9931-166c1ce6abc3",
            "5b9277bf-7f23-4464-8c20-addb12d83100",
            "b87207a8-c7af-412b-beaf-fb2f4da76352",
            "7aea8e6a-cc00-4669-8bc9-5a95d1ea8f77",
            "954e865b-aa55-4c2f-af9b-bfccf6329c02",
            "868eb80d-be24-4ffd-8b86-0d79f1215a29",
            "3677e7c1-826a-478b-84ee-50cee5a2ffb0",
            "7767ae3a-5a4b-4508-bd17-89799576c1bb",
            "fbed5698-e3d8-4738-bbbe-10e5455f0e63",
            "3a659fac-3cc6-4310-82c6-6d9ba96dc974",
            "8b30da5f-7c1e-4259-b860-516ee39b3ab0",
            "41b367f4-ad77-48bc-9b03-3dcd8c99697e",
            "7c89fa0f-225d-447b-ad57-3e36c015e2cf",
            "6ab5492f-8b6c-43ef-98af-8dcda9d4ccd7",
            "05109953-65ea-4a23-9b9a-f2edbeaa1e09",
            "2e2c6500-d069-4141-8d3d-4dfb4cd29e8d",
            "2a273e7e-d059-497e-a05c-cabf87d77013",
            "f9064e60-1bd9-4da5-b586-ec559a1c0a4f",
            "e270f8bf-c3e4-45d3-9855-f38d45f4c19e",
            "6325c5eb-300d-4c56-b267-0383e1743665",
            "0f4f84fb-3713-4d23-8920-e6d30b2a731f",
            "b171c89f-19a8-462c-8e43-02e086ff9d10",
            "bb6cdf6d-e348-495a-9886-8d76483fa8ad"
          ],
          "failures": [
            "ab2ff8c1-48cb-4a6c-96a3-9b018b7be432",
            "19381ed8-6604-453e-861b-bbd3b552cf12",
            "cbd37396-629a-4f9c-b2b7-a74fbac18fe0",
            "e073f00e-4de9-4aa6-8e53-381acb380183",
            "e31a7ead-cf94-4081-b010-0b44769e9636",
            "8cbf8dfa-66ab-42a3-87b6-7f2654171f15",
            "3f386ed2-3bed-416b-8aff-5cbfab5437c5",
            "8d0a605c-705f-4302-956c-1f0e4555c1d0",
            "f44c675b-29c0-4bf7-b671-e76c784d4fae",
            "71572ed2-b60a-482c-9362-92d94f606a87",
            "41c3050f-4945-474e-b674-5e2b62b51828",
            "6c6af306-694d-430f-8348-4ec7e562124f",
            "9d35e992-9db1-461f-99a8-da4a0871d9c8",
            "dc427a95-6b4d-46b5-802f-c6bdf8afe263",
            "e45cfc55-1a73-4762-b7f6-671afb2fc6fc",
            "bb41cc6c-7f23-43f4-a0be-dae0142eb12f",
            "767cece9-91d4-4f71-a359-22459dacd297",
            "106d3f6c-8af6-47b8-9bf0-88c0431b4444",
            "2c5fbfe8-3dbb-4d87-84cb-16c547587164",
            "3df0352d-3aea-440b-bcc5-4911223eca78",
            "f9639310-b920-4ca1-afcf-1f9c345db215",
            "63b35c3c-d5a3-452a-a632-8f0af0cb580c",
            "da442b9e-7637-4976-8d74-d97a219a81fa",
            "72a99f71-e0c1-4d9c-a5d7-70690383ee07",
            "e9bde100-3bfc-4c0d-96c4-f147471b15f0",
            "cc562a1e-4b66-4f49-8dbe-e0dd41d28e36",
            "f05c501f-2285-4cd3-b960-ccee0913a85e",
            "ca4dee04-1e17-4622-9ce1-055c207bd79e",
            "2709d413-7f26-4c2b-8dc1-2de34a9cd204",
            "c2fc2a1e-9680-429d-b834-795a3bfdc305",
            "d14bba06-77f9-43f7-ac82-06e7d5fe4b23",
            "2bb6de39-f0f8-4fc4-b9a4-eaa07d82ea0f",
            "83c5c4e1-0725-46ec-8efc-35d8d4e006be",
            "8aa32c31-1dc3-4db7-be6a-55a464d7bcc1",
            "eb8e4e29-4fbe-4eee-9287-f202978ba95b",
            "050b6a6f-d4de-48a2-9d59-632517cc2c92",
            "4c07b684-2e88-42f8-8df0-f905462e1921",
            "544608ef-8ee5-4fe0-9872-5c5df61008d3",
            "74c26a5c-2e3c-412b-8be5-5a580f31352d",
            "93ed545b-3b11-460f-ba75-005635eff981",
            "a7404f70-2072-455b-9d2e-9157c865508a",
            "16c00f65-2b7d-4b42-b9c1-d76d85e67dac",
            "044464db-dd41-4c96-8157-c9a2bbebfc2c",
            "46871185-d4b9-45dc-b24d-cdc0bf40a0cd",
            "9c510127-a44a-4ac9-a2e4-a31397158fee",
            "749fce57-dd26-4877-8727-c28929a079ac",
            "b9d58a16-6add-40dc-9d69-b20453d96189",
            "0f650130-7f50-4c01-9452-b4bba31e7a34",
            "d57b4d9f-aa29-4840-bc46-02e60c695fb2",
            "75c3d52d-ae34-43fe-aabf-1d2b8b9009b2",
            "d13023ff-228f-4893-86fc-aa4cd6172fb9",
            "ccb14ff6-1d84-4aea-90ef-86507ffb6cea",
            "f6128532-11d6-4193-bd8d-2aa401dea1da",
            "d7413a01-442f-45a5-880a-5329eb9158f6",
            "10b4ddc9-b359-4bcc-b7e9-6936107626a4",
            "b51fd01f-8076-4a27-bf05-877de545c6d2",
            "7831f7a5-e5b9-484e-bac8-c41ed0012af9",
            "86f7e334-3a01-4777-bd82-37453e77e88f",
            "b5f03623-326d-4133-9cf9-713d92399d0f",
            "0272998c-2a0b-4b24-aaf2-360e0f38c88d",
            "80c231a0-eb5b-45d7-a57c-dfa4b40fd268",
            "bfffb005-7307-46d3-b6e7-208332ce3f26",
            "b881f167-6af9-4865-9872-d768e357011d",
            "4a873fa6-c690-449f-addf-20a890c8a44d",
            "967a97df-89f2-4653-a0e2-bb6bb9f7092f",
            "af022c3e-23c2-4750-8857-2eec0a5351c8",
            "4818d8b6-82c1-4039-8dc0-e466340ff824",
            "08749907-46a8-4ef3-a922-8c686898a318",
            "0750bf91-a263-46ba-938a-d3606b7c2843",
            "72d50e78-9874-482b-b6aa-401af8342bbd",
            "addd68bd-53cb-4b01-a75f-a8670b7f0b8f",
            "e6871c91-ca75-446f-a965-d97097d5172b",
            "d7da1815-5728-4d9e-89fe-427073918a49"
          ],
          "pending": [],
          "skipped": [],
          "duration": 107215,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}